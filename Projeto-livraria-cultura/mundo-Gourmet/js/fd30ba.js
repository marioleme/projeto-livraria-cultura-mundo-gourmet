var nocache = "Thu, 04 Jun 2015 15:54:06 GMT";    var _mktz = _mktz || [];  var _old_mktz = _mktz;  var mktz_d = document;    if(typeof(_mktz.id_website) == "undefined") {      (function() {      /* 1.7.2 */  (function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'></div></div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'></td><td>t</td></tr></table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'></div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(  a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k<e;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l<q.matches.length&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f  .clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1></$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="<table>"&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,"opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&&(bA=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:"inline-block"},function(){return b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);  /* http://github.com/rendro/countdown/ */  (function() {    (function(jQuery) {      jQuery.countdown = function(el, options) {        var getDateData,          _this = this;        this.el = el;        this.jQueryel = jQuery(el);        this.jQueryel.data("countdown", this);        this.init = function() {          _this.options = jQuery.extend({}, jQuery.countdown.defaultOptions, options);          if (_this.options.refresh) {            _this.interval = setInterval(function() {              return _this.render();            }, _this.options.refresh);          }          _this.render();          return _this;        };        getDateData = function(endDate) {          var dateData, diff;          endDate = Date.parse(jQuery.isPlainObject(_this.options.date) ? _this.options.date : new Date(_this.options.date));          diff = (endDate - Date.parse(new Date)) / 1000;          if (diff <= 0) {            diff = 0;            if (_this.interval) {              _this.stop();            }            _this.options.onEnd.apply(_this);          }          dateData = {            years: 0,            months: 0,            days: 0,            hours: 0,            min: 0,            sec: 0,            millisec: 0          };          if (diff >= (365.25 * 86400)) {            dateData.years = Math.floor(diff / (365.25 * 86400));            diff -= dateData.years * 365.25 * 86400;          }          if (diff >= (30 * 86400)) {            dateData.months = Math.floor(diff / (30 * 86400));            diff -= dateData.months * 30 * 86400;          }          if (diff >= 86400) {            dateData.days = Math.floor(diff / 86400);            diff -= dateData.days * 86400;          }          if (diff >= 3600) {            dateData.hours = Math.floor(diff / 3600);            diff -= dateData.hours * 3600;          }          if (diff >= 60) {            dateData.min = Math.floor(diff / 60);            diff -= dateData.min * 60;          }          dateData.sec = diff;          return dateData;        };        this.leadingZeros = function(num, length) {          if (length == null) {            length = 2;          }          num = String(num);          while (num.length < length) {            num = "0" + num;          }          return num;        };        this.update = function(newDate) {          _this.options.date = newDate;          return _this;        };        this.render = function() {          _this.options.render.apply(_this, [getDateData(_this.options.date)]);          return _this;        };        this.stop = function() {          if (_this.interval) {            clearInterval(_this.interval);          }          _this.interval = null;          return _this;        };        this.start = function(refresh) {          if (refresh == null) {            refresh = _this.options.refresh || jQuery.countdown.defaultOptions.refresh;          }          if (_this.interval) {            clearInterval(_this.interval);          }          _this.render();          _this.options.refresh = refresh;          _this.interval = setInterval(function() {            return _this.render();          }, _this.options.refresh);          return _this;        };        return this.init();      };      jQuery.countdown.defaultOptions = {        date: "June 7, 2087 15:03:25",        refresh: 1000,        onEnd: jQuery.noop,        render: function(date) {          return jQuery(this.el).html("" + date.years + " years, " + date.days + " days, " + (this.leadingZeros(date.hours)) + " hours, " + (this.leadingZeros(date.min)) + " min and " + (this.leadingZeros(date.sec)) + " sec");        }      };      jQuery.fn.countdown = function(options) {        return jQuery.each(this, function(i, el) {          var jQueryel;          jQueryel = jQuery(el);          if (!jQueryel.data('countdown')) {            return jQueryel.data('countdown', new jQuery.countdown(el, options));          }        });      };      return void 0;    })(jQuery);    }).call(this);    /*cursometer*/  (function($) {  	      var NAMESPACE = 'cursometer';        function Point(x, y) {          this.x = x;          this.y = y;      };          function HistoricalPoint(point, timestamp) {          this.point = point;          this.timestamp = timestamp;      };        function initialize(options) {          return this.each(function() {              options && $.extend(_options, options);              var $this = $(this);              var data = {                      options: options,                      _currSpeed: 0,                      _updateSpeedTimeout: null,                      _lastMousePos: null,                      _currMousePos: null,                      _hasAttachedMousemoveEvent: false              };                $this.data(NAMESPACE, data);              $this.mouseenter(updateSpeed);              $this.mouseleave(stopPolling);              captureMousePosition.apply(this);            });      }          function updateSpeed() {            var $this = $(this);          var data = $this.data(NAMESPACE);            var currMousePos = data._currMousePos;          var lastMousePos = data._lastMousePos;            var speed = 0;            if(currMousePos && lastMousePos)          {                  var distance = calcDistance(currMousePos.point, lastMousePos.point);                  speed = (distance/(currMousePos.timestamp - lastMousePos.timestamp));          }            var currSpeed = data._currSpeed = speed;            data.options.onUpdateSpeed && data.options.onUpdateSpeed.apply($this[0], [currSpeed]);            data._updateSpeedTimeout = setTimeout(function() {                  updateSpeed.apply($this[0]);          }, data.options.speedPollingRate);      };          function stopPolling() {          var $this = $(this);          var data = $this.data(NAMESPACE);          data._currSpeed = 0;          data._lastMousePosCalc = null;          data._currMousePosCalc = null;          data._hasAttachedMousemoveEvent = false;          data._updateSpeedTimeout && clearTimeout(data._updateSpeedTimeout);        };        function captureMousePosition()      {          var $this = $(this);          var data = $this.data(NAMESPACE);            if(data._hasAttachedMousemoveEvent)          {                  return;          }              $this.one('mousemove.' + NAMESPACE, function(event) {                    if(data._currMousePos)                  {                          data._lastMousePos = data._currMousePos;                  }                    var currMouseX = event.pageX;                  var currMouseY = event.pageY;                  var currMousePos = new Point(currMouseX, currMouseY);                  data._currMousePos = new HistoricalPoint(currMousePos, (new Date()).getTime());                    setTimeout(function() {                          captureMousePosition.apply($this[0]);                  }, data.options.captureMouseMoveRate);                    data._hasAttachedMousemoveEvent = false;            });            data._hasAttachedMousemoveEvent = true;      }          function calcDistance(mousePosA, mousePosB) {          var distance = 0;          if(mousePosA && mousePosB)          {                  var xDiff = Math.pow((mousePosA.x - mousePosB.x), 2);                  var yDiff = Math.pow((mousePosA.y - mousePosB.y), 2);                  distance = Math.sqrt(xDiff + yDiff);          }            return distance;      };          function getCurrentSpeed()      {          return $(this).data(NAMESPACE)._currSpeed;      }        var _methods = {          init: initialize,          getCurrentSpeed: getCurrentSpeed      };          var _options = {          updateSpeedRate: 20,          captureMouseMoveRate: 15,          onUpdateSpeed: $.noop      };        $.fn.cursometer = function(methodName) {          if(_methods[methodName])          {                  return _methods[methodName].apply(this, Array.prototype.slice.call(arguments, 1));          }          else if(typeof(methodName) === 'object' || !methodName)          {                  return _methods.init.apply(this, arguments);          }          else          {                  $.error('Method ' +  methodName + ' does not exist on jQuery.cursometer');          }      };  	  })(jQuery);      /* IE support */    if ('function' !== typeof Array.prototype.reduce) {    Array.prototype.reduce = function(callback, opt_initialValue){      'use strict';      if (null === this || 'undefined' === typeof this) {        throw new TypeError(            'Array.prototype.reduce called on null or undefined');      }      if ('function' !== typeof callback) {        throw new TypeError(callback + ' is not a function');      }      var index, value,          length = this.length >>> 0,          isValueSet = false;      if (1 < arguments.length) {        value = opt_initialValue;        isValueSet = true;      }      for (index = 0; length > index; ++index) {        if (this.hasOwnProperty(index)) {          if (isValueSet) {            value = callback(value, this[index], index, this);          }          else {            value = this[index];            isValueSet = true;          }        }      }      if (!isValueSet) {        throw new TypeError('Reduce of empty array with no initial value');      }      return value;    };  }    if (!Array.prototype.indexOf) {      Array.prototype.indexOf = function(searchElement, fromIndex) {          if (this === undefined || this === null) {              throw new TypeError('"this" is null or not defined');          }            var length = this.length >>> 0;            fromIndex = +fromIndex || 0;            if (Math.abs(fromIndex) === Infinity) {              fromIndex = 0;          }            if (fromIndex < 0) {              fromIndex += length;              if (fromIndex < 0) {                  fromIndex = 0;              }          }            for (; fromIndex < length; fromIndex++) {              if (this[fromIndex] === searchElement) {                  return fromIndex;              }          }            return -1;      };  }    jQuery.ajaxTransport("+*", function( options, originalOptions, jqXHR ) {      if(window.XDomainRequest) {          var xdr;          return {              send: function( headers, completeCallback ) {                  xdr = new XDomainRequest();                  xdr.open("get", options.url);                  xdr.onload = function() {                      if(this.contentType.match(/\/xml/)){                          var dom = new ActiveXObject("Microsoft.XMLDOM");                          dom.async = false;                          dom.loadXML(this.responseText);                          completeCallback(200, "success", [dom]);                      }else{                          completeCallback(200, "success", [this.responseText]);                                                }                  };                                    xdr.ontimeout = function(){                      completeCallback(408, "error", ["The request timed out."]);                  };                                    xdr.onerror = function(){                      completeCallback(404, "error", ["The requested resource could not be found."]);                  };                                    xdr.send();            },            abort: function() {                if(xdr)xdr.abort();            }          };      }  });var mktz_$ = window.jQuery.noConflict(true);_mktzInteract = function() {      var self = this;      self.container = 'mktz_container';      self.container_outer = 'mktz_outer';      self.container_css = new Object();      self.close_btn = '<div class="close" style="z-index:26112988; position:absolute;"><a href="javascript:;" onclick="_mktz.inject.close();"><img src="//'+_mktz.cdn_domain+'/public/close.png" alt="Close" border="0"/></a></div>';      self.show_close = true;      self.type = '';      self.event = 'load';      self.autoclose_in = 999;      self.show_after = 0;      self.shadow_color = '#000';      self.shadow_opacity = 0.8;      self.content = '';      self.exitCount = 0;      self.lateVariation = {};      self.clicks = {};            self.show = function () {                    _mktz._debug('[MKTZ] Evaluated code: '+self.content);                    switch(self.type) {              case'interstitial':              case'popup':              case'ribbon_left':              case'ribbon_right':              case'ribbon_top':              case'ribbon_bottom':              mktz_$('#'+self.container).html(self.content);                            /* reposition at every 100ms */              setInterval(function() { self.positioning('container'); },100);              break;                case'bar_top':              mktz_$('#'+self.container).html(self.content);              mktz_$('#'+self.container).css("width","100%");              self.positioning('container');              break;                case'bar_bottom':              mktz_$('#'+self.container).html(self.content);              mktz_$('#'+self.container).css("width","100%");              self.positioning('container');              break;                            case'sound_player':              mktz_$('#'+self.container).html(self.content);              mktz_$('#'+self.container).css("bottom","20px");              mktz_$('#'+self.container).css("right","20px");              break;                case'bgsound':              mktz_$('#'+self.container).html(self.content);              mktz_$('#'+self.container).css("visibility","hidden");              break;                case'javascript':              try {                  eval(self.content);                  eval('_mktz._flicker("remove");');              } catch (e) {                  if (e instanceof SyntaxError) {                      _mktz._flicker("remove");                      _mktz._debug('[MKTZ] Eval variation error: '+e.message);                  }              }              break;                case'landing':              try {                  if(self.content.search("window.location.href=") >= 0 || self.content.search("document.location.href=") >= 0 || self.content.search("top.location.href=") >= 0) {                      setTimeout(function() {                          document.location.href=self.attachGET(self.content);                      },500);                  }                  else {                      eval(self.content);                      eval('_mktz._flicker("remove");');                  }                                } catch (e) {                  if (e instanceof SyntaxError) {                      _mktz._flicker("remove");                      _mktz._debug('[MKTZ] Eval variation error: '+e.message);                  }              }              break;                            case'control':                  _mktz._debug('[MKTZ] Evaluated code: none (control)');              break;            }            /*insert close button & show content*/          if(self.type != "javascript" && self.type != "landing" && self.type != "control") {              mktz_$('#'+self.container).fadeIn('fast');              if(self.show_close) {                  mktz_$('#'+self.container).prepend(self.close_btn);                  self.positioning('close');              }          }                    /*track clicks*/          self.track_clicks();                    /*countdown*/          var countdown = mktz_$('#mktz_countdown');          if(countdown.length > 0) {              var limit = countdown.attr("data-limit");              var endDate = '';              if(self._is_number(limit)) {                  var enter_at = _mktz._readTracking('enter_at');                  var exp = enter_at.split('|');                  var exp_date = exp[0].split('-');                  var exp_time = exp[1].split(':');                  endDate = new Date(exp_date[0], parseInt(exp_date[1])-1, exp_date[2], exp_time[0], exp_time[1], exp_time[2], 0);                                    endDate.setSeconds(endDate.getSeconds() + parseInt(limit));              }              else {                  var exp = limit.split(' ');                  var exp_date = exp[0].split('-');                  var exp_time = exp[1].split(':');                  endDate = Date.UTC(exp_date[2], parseInt(exp_date[1])-1, exp_date[0], exp_time[0], exp_time[1], exp_time[2], 0);              }                            countdown.countdown({                  date: endDate,                  render: function(data) {                      mktz_$('#container_YEARS b').html(data.years);                      mktz_$('#container_MONTHS b').html(data.months);                      mktz_$('#container_DAYS b').html(data.days);                      mktz_$('#container_HOURS b').html(data.hours);                      mktz_$('#container_MINUTES b').html(data.min);                      mktz_$('#container_SECONDS b').html(data.sec);                  }              });            }      };            self.attachGET = function(str) {          var url = str.replace("window.location.href='","");              url = url.replace("';","");          var parameters = document.location.search;          if(url.search("\\?") > -1 && parameters != "") {              parameters = parameters.replace('?','&');          }                    if(parameters.search("mktz_p") > -1) { parameters = ''; }          return url+''+parameters;      };        self.close = function() {          mktz_$('#'+self.container_outer).remove();          mktz_$('#'+self.container).remove();      };        self.autoclose = function() {          if(self.autoclose_in > 0) {              setTimeout('_mktz.inject.close()',(self.autoclose_in-1)*1000);          }      };            self._is_number = function(n){          return !isNaN(parseFloat(n)) && isFinite(n);      };        self.positioning = function(elem) {          var element;          switch(elem) {              case'close':              element = mktz_$('#'+self.container).find('.'+elem);              break;                            case'container':              element = mktz_$('#'+self.container);                            if(self.type != "javascript" && self.type != "landing" && self.type != "control") {                  var window_sizes = self.view_port();                  var window_width = window_sizes[0];                  var window_height = window_sizes[1];                  var container_width = element.width();                  var container_height = element.height();                    if(window!=window.top) {                      window_sizes = window.parent.view_port();                      window_width = window_sizes[0];                      window_height = window_sizes[1];                  }              }              break;          }            switch(self.type) {              case'interstitial':              switch(elem) {                  case'close':                  element.css({                      'right' : '0',                      'margin' : '-13px -15px -15px -15px'                  });                  break;                  case'container':                  container_width = 90*window_width/100;                  container_height = 90*window_height/100;                                    element.css({                      'width' : container_width+'px',                      'height' : container_height+'px',                      'left' : (window_width/2)-(container_width/2)+'px',                      'top' : (window_height/2)-(container_height/2)+'px'                  });                  break;              }              break;                case'popup':              switch(elem) {                  case'close':                  element.css({                      'right' : '0',                      'margin' : '-13px -15px -15px -15px'                  });                  break;                  case'container':                  element.css({                      'left' : (window_width/2)-(container_width/2)+'px',                      'top' : (window_height/2)-(container_height/2)+'px'                  });                  break;              }              break;                case'ribbon_left':              switch(elem) {                  case'close':                  element.css({                      'right' : '0',                      'margin' : '-13px -15px -15px -15px'                  });                  break;                  case'container':                  element.css({                      'left' : '0',                      'top' : (window_height/2)-(container_height/2)+'px'                  });                      break;              }              break;                case'ribbon_right':              switch(elem) {                  case'close':                  element.css("margin","-13px -15px -15px -15px");                  break;                  case'container':                  element.css({                      'right' : '0',                      'top' : (window_height/2)-(container_height/2)+'px'                  });                      break;              }              break;                case'ribbon_top':              switch(elem) {                  case'close':                   element.css({                      'right' : '-13px',                      'bottom' : '-13px'                  });                  break;                  case'container':                    element.css({                      'top' : '0',                      'left' : (window_width/2)-(container_width/2)+'px'                  });                   break;              }              break;                case'ribbon_bottom':              switch(elem) {                  case'close':                  element.css({                      'right' : '-13px',                      'top' : '-13px'                  });                  break;                  case'container':                     element.css({                      'bottom' : '0',                      'left' : (window_width/2)-(container_width/2)+'px'                  });                   break;              }              break;                case'bar_top':              switch(elem) {                  case'close':                  element.css({                      'right' : '5px',                      'bottom' : '-15px'                  });                  break;                  case'container':                  element.css({                      'top' : '0',                      'left' : '0'                  });                      break;              }              break;                case'bar_bottom':              switch(elem) {                  case'close':                  element.css({                      'right' : '5px',                      'top' : '-15px'                  });                  break;                  case'container':                  element.css({                      'bottom' : '0',                      'left' : '0'                  });                      break;              }              break;                case'sound_player':              switch(elem) {                  case'close':                  element.css({                      'right' : '0px',                      'top' : '-28px'                  });                  break;              }              break;                case'bgsound': element.remove(); break;              case'javascript': element.remove(); break;              case'landing': element.remove(); break;          }                    if(elem == "container") {              /*apply custom css*/              var extra_css = self.container_css;              for(param in extra_css) {                   if(extra_css.hasOwnProperty(param)) {                      element.css(param,extra_css[param]);                   }              }          }      };        self.view_port = function() {          var window_width;          var window_height;            if(typeof window.innerWidth != 'undefined') {            window_width = window.innerWidth;            window_height = window.innerHeight;          }          else if (typeof mktz_d.documentElement != 'undefined'          && typeof mktz_d.documentElement.clientWidth !=          'undefined' && mktz_d.documentElement.clientWidth != 0) {             window_width = mktz_d.documentElement.clientWidth;             window_height = mktz_d.documentElement.clientHeight;          }          else {            window_width = mktz_d.getElementsByTagName('body')[0].clientWidth;            window_height = mktz_d.getElementsByTagName('body')[0].clientHeight;          }            return [window_width,window_height];      };        self.insert_container = function() {          if(self.type == "popup" || self.type == "interstitial") {                            if(self.shadow_color == "") { self.shadow_color='#000'; }              if(self.shadow_opacity == "") { self.opacity=0.8; }                            var container_outer = mktz_$('<div/>');              container_outer.attr("id",self.container_outer);              container_outer.css({                  'width' : '100%',                  'height' : '100%',                  'left' : '0px',                  'top' : '0px',                  'background' : self.shadow_color,                  'position' : 'fixed',                  'z-index' : '24111988',                  '-ms-filter' : 'progid:DXImageTransform.Microsoft.Alpha(Opacity='+self.shadow_opacity*100+')',                  'filter' : 'alpha(opacity='+self.shadow_opacity*100+')',                  '-moz-opacity' : self.shadow_opacity,                  '-khtml-opacity' : self.shadow_opacity,                  'opacity' : self.shadow_opacity               });              container_outer.on('click',function() { _mktz.inject.close(); });              container_outer.prependTo('body');          }            var container = mktz_$('<div/>');          container.attr("id",self.container);          container.css({              'z-index' : '25111988',              'position' : 'fixed',              '-webkit-border-radius' : '3px',              '-moz-border-radius' : '3px',              'border-radius' : '3px',              'display' : 'none'          });                              var extra_css = self.container_css;          for(param in extra_css) {               if(extra_css.hasOwnProperty(param)) {                  container.css(param,extra_css[param]);               }          }                    container.prependTo('body');      };        self.detect_exit = function() {          mktz_$('html').mouseout(function(e) {              if(self.type != "control" && self.exitCount == 0) {                  if(e.clientY < 0 || e.clientY < 10) {                      if(_mktz.mouse_speed > 0.400) {                          self.exitCount++;                          self.insert_creative();                      }                  }              }  	});      };            self.detect_scroll = function(scroll) {          var scroll_px = (mktz_$(document).height() - mktz_$(window).height())*(scroll/100);          mktz_$(window).on('scroll',function() {              if(mktz_$(window).scrollTop() >= scroll_px) {                  if(self.type != "control") {                      self.insert_creative();                  }                  else {                      _mktz._Variation(self.lateVariation.experiment.trigger,self.lateVariation.variation.type,self.lateVariation.variation_key);                      _mktz._Integrations(self.lateVariation.experiment,self.lateVariation.variation,true);                  }                                    mktz_$(window).off('scroll');              }          });      };            /* click goals */      self.track_clicks = function() {          var goals = self.clicks;          var count_goals = _mktz._count_json(goals);          var k = '';          if(count_goals > 0) {              for(k in goals) {                                    if(goals.hasOwnProperty(k)) {                      var goal = goals[k];                      if(mktz_$(goal.selector).length > 0) {                          mktz_$(goal.selector).attr("mktz-click",goal.slug);                          mktz_$(goal.selector).on("mousedown", function() {                             _mktz._Goal(mktz_$(this).attr("mktz-click"),0);                          });                      }                  }              }          }      };            self.run_in_order = function (functions) {          for(var key in functions) {              eval(functions[key]);          }      };            self.insert_creative = function() {                    if(_mktz.running_test.id_variation == self.lateVariation.variation.id || mktz_$('#mktz_container').length > 0) {              /* already triggered */          }          else {              self.insert_container();              self.show();              self.autoclose();                _mktz._Variation(self.lateVariation.experiment.trigger,self.lateVariation.variation.type,self.lateVariation.variation_key);              _mktz._Integrations(self.lateVariation.experiment,self.lateVariation.variation,true);          }                  };            self.init = function(experiment_type) {                    mktz_$(document).ready(function() {              if(self.type != "") {                                    /*remove flicker for interactions*/                  if(self.type != "landing" && self.type != "javascript") {                      _mktz._flicker("remove");                  }                                if(experiment_type == "ab") {                      self.show();                  }                  else {                      switch(self.type) {                          case'sound_player':                          self.show_close = false;                          self.content='<object type="application/x-shockwave-flash" data="//d3vbj265bmdenw.cloudfront.net/public/music_player.swf" width="200" height="20"><param name="movie" value="//d3vbj265bmdenw.cloudfront.net/public/music_player.swf" /><param name="bgcolor" value="#ffffff" /><param name="FlashVars" value="mp3='+self.content+'&amp;autoplay=0&amp;showvolume=1" /></object>';                          break;                            case'bgsound':                          self.show_close = false;                          self.content='<object type="application/x-shockwave-flash" data="//d3vbj265bmdenw.cloudfront.net/public/music_player.swf" width="200" height="20"><param name="movie" value="//d3vbj265bmdenw.cloudfront.net/public/music_player.swf" /><param name="bgcolor" value="#ffffff" /><param name="FlashVars" value="mp3='+self.content+'&amp;autoplay=1&amp;showvolume=0" /></object>';                          break;                      }                                            /* branding on popups */                      if(self.type == "popup" && _mktz.branding === true) {                          self.content=self.content+'<div style="position:absolute; bottom:-30px;"><a href="http://www.marketizator.'+_mktz.tld+'/?utm_source=branding&utm_medium=popup&utm_campaign='+document.domain+'" target="_blank" style="font-size:12px; color:'+self.detectContrast(self.shadow_color)+';">'+_mktz.powered_by+'</a></div>';                      }                                                                  if(self.event == "load") {                          self.insert_creative();                      }                      else if(self.event == "exit") {                          self.detect_exit();                      }                      else {                          var exp = self.event.split('|');                          self.detect_scroll(exp[1]);                      }                                                            }              }                        });      };        self.pre_init = function(experiment_type) {                    if(self.show_after > 0) {               _mktz._flicker("remove");                            if(self.event == "load") {                  setTimeout(function() { self.init(experiment_type); }, self.show_after*1000);               }              else {                  /* autoplay after x sec. */                  var tmp = self.event;                  setTimeout(function() { self.event='load'; self.init(experiment_type); }, self.show_after*1000);                                     /* play at event detection */                  self.event = tmp;                  self.init(experiment_type);              }            }          else { self.init(experiment_type); }      };            self.detectContrast = function(bg) {          var rgb = self.HEXtoRGB(bg);          var o = Math.round(((parseInt(rgb.r) * 299) + (parseInt(rgb.g) * 587) + (parseInt(rgb.b) * 114)) /1000);          return (o > 125) ? 'black' : 'white';      };            self.HEXtoRGB = function(hex) {         if (hex[0]=="#") { hex=hex.substr(1); }         if (hex.length==3) {          var temp=hex; hex='';          temp = /^([a-f0-9])([a-f0-9])([a-f0-9])$/i.exec(temp).slice(1);          for (var i=0;i<3;i++) { hex+=temp[i]+temp[i]; }         }         var triplets = /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i.exec(hex).slice(1);         return {          r: parseInt(triplets[0],16),          g: parseInt(triplets[1],16),          b: parseInt(triplets[2],16)         }      };        };         if(_mktz[0] == "disable") { if(window.console) { console.log('[MKTZ] Disabled by API command'); } }      else {          _mktz = {              /*global variables*/              jQuery : mktz_$,              id_website : '1687',              tld : 'com',              powered_by: (_mktz.powered_by === undefined) ? 'Powered by Marketizator' : _mktz.powered_by,              cc_domain : (_mktz.cc_domain === undefined) ? '' : _mktz.cc_domain,              website_url : 'www.livrariacultura.com.br',               allocation_type : 'priority',               cdn_domain : 'd3vbj265bmdenw.cloudfront.net',              branding : false,              cookie_optout : 'mktz_optout', /*10 years*/              cookie_tracking : 'mktz_client', /*10 years*/              cookie_session : 'mktz_sess', /*session only*/              session_timeout : (_mktz.session_timeout === undefined) ? '' : _mktz.session_timeout,              cookie_survey : 'mktz_survey', /*10 years*/              cookie_ab : 'mktz_ab', /*10 years*/              protocol : mktz_d.location.protocol == 'https:' ? 'https:' : 'http:',              base_domain : '//app.marketizator.com',              host_name : mktz_d.domain,              time : '',              mouse_speed : 0,              no_experiments : (_mktz.crossDomain === undefined) ? true : true,              loading_slow : false,              loading_tolerance : 2500,              analytics_integration : '1',              tagged_experiment : false,              ab_experiments : false,              inject : '',              loggs : [],              running_test : {id_experiment:0,id_variation:0},              crossDomain : (_mktz.crossDomain === undefined) ? false : _mktz.crossDomain,              embed_survey : (_mktz.embed_survey === undefined) ? false : _mktz.embed_survey,                /*visitor variables*/              visitor : {                  referer_type : '',                  referer_url : '',                  referer_domain : '',                  browser_name: '',                  browser_version : '',                  browser_language : window.navigator.userLanguage || window.navigator.language,                  os : '',                  device_type : '',                  ip : '',                  resolution : window.screen.width+'x'+window.screen.height,                  screen_width : window.screen.width,                  screen_height : window.screen.height,                  uid : '',                  session_id : '',                  cookies : '',                  weather_temperature_c : '',                  weather_temperature_f : '',                  weather_condition : '',                  is_returning : '',                  new_visitor : '',                  region : '',                  city : '',                  isp : '',                  views_session : '',                  page_viewed : {},                  time_onsite : '',                  landing_page : '',                  visits_count : '',                  custom : {},                  history : {},                  days_first_visit : 0,                  days_previous_visit : 0              },                /*visit variables - initialized on init()*/              visit : {                  page_title : mktz_d.title,                  page_url : location.href,                  utm_source : '',                  utm_term : '',                  utm_campaign : '',                  utm_medium : '',                  utm_content : ''              },                /*pageview goals*/              pageview_goals : {},                /*experiments*/              experiments : {},                /*onpages*/              onpages : {},                /*invalidations for entire code*/              globalChecks : function() {                    var i = 0;                  if(this._is_iframe()) {                      i++;                      this._debug('[MKTZ] Website loaded in iframe');                  }                  else if(this._is_preview()) {                      i++;                      this._debug('[MKTZ] Website loaded via proxy (preview)');                  }                  else if(this._is_editor()) {                      i++;                      this._debug('[MKTZ] Website loaded in builder');                  }                  else if(this._is_optout()) {                      i++;                      this._debug('[MKTZ] Visitor is optout');                  }                  else if(this.crossDomainGoal) {                      i++;                      this._debug('[MKTZ] Cross domain goal. No experiments run.');                  }                    if(i > 0) { return false; } else { return true; }              },                /*API interface*/              push : function(func) {                  var to_run = '_mktz.'+func[0]+'(';                  var variables_no = func.length;                  for(i=1;i < variables_no;i++) {                      if(typeof(func[i]) == "object") {                          to_run = to_run+""+JSON.stringify(func[i])+"";                      }                      else {                          to_run = to_run+"'"+func[i]+"'";                      }                      if(i==variables_no-1) {} else { to_run = to_run+','; }                  }                  to_run = to_run+')';                    try {                      return eval(to_run);                   } catch (e) {                      if (e instanceof SyntaxError) {                          this._debug('[MKTZ] Push error: '+e.message+' => '+to_run+'');                      }                  }              },                /*initilizate*/              init : function() {                    if(this.globalChecks()) {                                        /* get mouse speed */                      mktz_$(window).cursometer({                          onUpdateSpeed: function(speed) {                              return _mktz.mouse_speed=speed;                          },                          updateSpeedRate: 15                      });                                        /* set/update tracking cookie */                      this._tracking_cookie();                        this._debug('[MKTZ] Setting JS variables for visitor');                      /*values for visitor variables*/                      this.visit.page_url = this._remove_debug_param(this.visit.page_url);                      this.visitor.referer_type = this._readTracking('referer_type');                      this.visitor.referer_url = this._readTracking('referer_url');                      this.visitor.referer_domain = this._readTracking('referer_domain');                      this.visitor.uid = this._readTracking('uid');                      this.visitor.session_id = this._readTracking('session');                      this.visitor.browser_name = this._browser_name();                      this.visitor.browser_version = this._browser_version();                      this.visitor.os = this._os();                      this.visitor.device_type = this._device_type();                      this.visitor.cookies = this._read_cookies();                      this.visitor.views_session = this._readTracking('views');                      this.visitor.is_returning = this._readTracking('is_returning');                      this.visitor.new_visitor = (this.visitor.is_returning == "0") ? "1" : "0";                      this.visitor.time_onsite = this._time_onsite();                      this.visitor.landing_page = this._readTracking('landing');                      this.visitor.visits_count = this._readTracking('visits');                      this.visitor.days_first_visit = this._days_since('first_visit');                      this.visitor.days_previous_visit = this._days_since('last_visit');                      this.time = this._get_time();                        /* initialized here for ajax reasons */                      this.loading_slow = false;                      this.tagged_experiment = false;                      this.loggs = [];                      this.running_test = {id_experiment:0,id_variation:0};                      this.visit.page_title = mktz_d.title;                      this.visit.page_url = location.href;                      this.visit.utm_source = this._readTracking('utm_source');                      this.visit.utm_term = this._readTracking('utm_term');                      this.visit.utm_campaign = this._readTracking('utm_campaign');                      this.visit.utm_medium = this._readTracking('utm_medium');                      this.visit.utm_content = this._readTracking('utm_content');                           this._debug('[MKTZ] Initializate');                      this._debug('[MKTZ] Generated at: '+nocache);                        /* apply experiments */                      if(this.no_experiments && !this._is_live_preview()) {                          this._debug('[MKTZ] No active experiments!');                          /* run for goals/vars */                          _mktz._load_events();                      }                      else {                                                /* inject visitor API */                          _mktz._debug('[MKTZ] {START} Load visitor API');                          var smid = this._get_cookie('smclient');                          smid = (smid != "") ? '&smid='+smid : '';                                                    _mktz.loading_tolerance = (!_mktz.ab_experiments) ? 10000 : _mktz.loading_tolerance;                                                    /* if live preview */                          var is_live_preview = this._is_live_preview();                          if(is_live_preview) {                              smid=smid+'&mktz_p='+is_live_preview;                              _mktz.loading_tolerance = 99999;                          }                            var apiTime= new Date().getTime();                          mktz_$.support.cors = true;                          mktz_$.ajax({                              url: '//app.marketizator.com/api/visitor.js?v='+_mktz.visitor.uid+'&s='+_mktz.visitor.session_id+'&w=1687&page_url='+_mktz._urlencode(_mktz.visit.page_url)+''+smid,                              error: function(XHR, textStatus, errorThrown){                                    var req = '//app.marketizator.com/api/visitor.js?v='+_mktz.visitor.uid+'&s='+_mktz.visitor.session_id+'&w=1687&page_url='+_mktz._urlencode(_mktz.visit.page_url)+''+smid;                                  _mktz._stop_tests(new Date().getTime()-apiTime, textStatus+' -> '+errorThrown,req);                               },                              success: function(){ _mktz.apiLoaded(); },                              timeout: _mktz.loading_tolerance                          });                                                    /* inject noflicker if there are ab experiments*/                          if(_mktz.ab_experiments) { _mktz._flicker('insert'); }                        }                                            /*insert view*/                      this._View();                                            /*if ping test*/                      if(this._get_parameter("ping_mktz",mktz_d.URL) == "1") {                          window.close();                      }                    }              },                /* run when visitor.js was loaded */              apiLoaded : function() {                  if(this._is_live_preview()) {                      _mktz.push(["applyExperiment",this._is_live_preview()]);                  }                  else if(_mktz.embed_survey) {                      _mktz.push(["applyExperiment",_mktz.embed_survey]);                  }                  else {                        /*these should run in certain order*/                      var fct1 = new Array();                                            /*on load events*/                      fct1[1] = '_mktz._load_events();';                        /* detect already tagged experiments */                      fct1[2] = '_mktz._detect_tagged_ab();';                        /*detect ab tests to run*/                      fct1[3] = '_mktz._detect_ab();';                                            /*detect personalization tests to run*/                      fct1[4] = '_mktz._detect_interactions();';                        /*detect survey to run*/                      fct1[5] = '_mktz._detect_surveys();';                        /* trigger click experiments */                      fct1[6] = '_mktz._click_triggers();';                        /*tracking pageview - goals*/                      fct1[7] = '_mktz._pageview_goals();';                                            mktz_$(document).ready(function() {                          _mktz.run_in_order(fct1);                      });                    }              },                /* preload images for onload interactions*/              _preload_images : function(str) {                  try {                      var images = new Array();                      var finds_bgs = str.match(/(url([^)]+))/g);                      var finds_imgs = str.match(/src=".+.([jpg/png/jpeg/gif])"/g);                      if(finds_bgs) {                          for(i in finds_bgs) {                              var image = finds_bgs[i];                              image = image.replace('url(','');                              image = image.replace(/"/g,'');                              image = image.replace(/'/g,'');                              images.push(image);                          }                        }                        if(finds_imgs) {                          for(i in finds_imgs) {                              var image = finds_imgs[i];                              image = image.replace('src=','');                              image = image.replace(/"/g,'');                              image = image.replace(/'/g,'');                              var exp = image.split(' ');                              image = exp[0];                              images.push(image);                          }                        }                        if(images.length > 0) {                          for(i in images) { (new Image()).src = images[i]; }                      }                  }                  catch(e) {}              },                /* stop tests */              _stop_tests : function(timeout,msg,req) {                  this.loading_slow = true;                  this._flicker("remove");                  this._debug('[MKTZ] Experiments aborted! '+msg);                  this._slow_log(timeout,msg,req);              },                /* flicker container */              _flicker : function(op) {                              },                  /*run in order*/              run_in_order : function (functions) {                  for(key in functions) {                      eval(functions[key]);                  }              },                /* remove debug param */              _remove_debug_param : function(str) {                  str = str.replace('?mktz_debug=1','');                  str = str.replace('//&mktz_debug=1','');                  return str;              },                /*run events on loading (goals, variables)*/              _load_events : function() {                  for(k in _old_mktz) {                      if(_old_mktz.hasOwnProperty(k)) {                          if(_old_mktz[k][0] != "undefined") {                              if(_old_mktz[k][0] == "_Goal") {                                  this.push([_old_mktz[k][0],_old_mktz[k][1],_old_mktz[k][2],_old_mktz[k][3]]);                              }                              else {                                  this.push([_old_mktz[k][0],_old_mktz[k][1],_old_mktz[k][2]]);                              }                          }                      }                  }              },                /* check if loaded in frame (exception for crossdomain goals*/              _is_iframe : function() {                  if(this.embed_survey) {                       return false;                   }                  else {                      if(!this.crossDomain) {                          try {                              return window.self !== window.top;                          } catch (e) {                              return true;                          }                      }                      else {                          return false;                      }                  }              },                /*check if is preview mode*/              _is_preview : function() {                  var preview = this._get_parameter("mktz_preview",mktz_d.URL);                  if(preview) { return true; }                  else { return false; }              },                            /*check if is live preview mode*/              _is_live_preview : function() {                  var preview = this._get_parameter("mktz_p",mktz_d.URL);                  if(preview) { return preview; }                  else { return false; }              },                /*check if is loaded in editor*/              _is_editor : function() {                  if(window.location.href.indexOf("builder=") > -1) {                      return true;                  }                  else {                      return false;                  }              },                /*check if optout*/              _is_optout : function() {                  var optout = this._get_parameter("mktz_optout",mktz_d.URL);                  if(optout) {  this._set_cookie(this.cookie_optout,optout,(24*365)*2,'/','');  }                  else { var optout = this._get_cookie(this.cookie_optout); }                    if(optout == 1) { return true; }                  else { return false; }              },                /*set debug message*/              _debug : function(msg) {                  var debug = this._get_parameter("mktz_debug",mktz_d.URL);                  var d = new Date();                  var date = d.getHours()+':'+d.getMinutes()+':'+d.getSeconds()+' '+d.getMilliseconds();                  if(debug == 1) { if(window.console) { console.log(date+' -> '+msg); } }                  this.loggs.push(date+' -> '+msg);              },                /*read GET parameter*/              _get_parameter : function(p,url) {                   var explode = url.split('?');                  var url = '?'+explode[1];                  var loc = url.substring(1, url.length);                  var param_value = false;                    var params = loc.split("&");                  for(i=0; i<params.length;i++) {                    param_name = params[i].substring(0,params[i].indexOf('='));                    if(param_name == p) {                        param_value = params[i].substring(params[i].indexOf('=')+1)                    }                  }                    if(param_value) { return param_value;  }                  else { return false; }              },                /*read cookie*/              _get_cookie : function(check_name) {                  var cookies = mktz_d.cookie.split(';');                  var temp_cookie = '';                  var cookie_name = '';                  var cookie_value = '';                  var b_cookie_found = false;                    for(i=0;i<cookies.length;i++) {                      temp_cookie = cookies[i].split('=');                      cookie_name = temp_cookie[0].replace(/^\s+|\s+$/g,'');                      if(cookie_name == check_name) {                          b_cookie_found = true;                          if(temp_cookie.length>1) {                                  cookie_value = unescape(temp_cookie[1].replace(/^\s+|\s+$/g, ''));                          }                          return cookie_value;                          break;                      }                      temp_cookie = null;                      cookie_name = '';                  }                  if(!b_cookie_found) {                          return null;                  }                 },                /*set cookie*/              _set_cookie : function(name,value,expires_hours,path,domain,secure) {                    if(expires_hours) {                      var today = new Date();                      var expires_hours = expires_hours * 1000 * 60 * 60;                      var expires_date = new Date(today.getTime() + (expires_hours));                      expires_date = expires_date.toGMTString();                  }                                    /* set global domain */                  if(this.cc_domain != "") { domain = this.cc_domain; }                                    mktz_d.cookie = name + "=" +escape(value) +                          ((expires_hours != "") ? ";expires=" + expires_date : "" ) +                          ((path) ? ";path=" + path : "" ) +                           ((domain) ? ";domain=" + domain : "" ) +                          ((secure) ? ";secure" : "" );              },                /*get visitor time*/              _get_time : function() {                  var now = new Date();                   var month = now.getMonth()+1;                  if(month <= 9) { month = '0'+month; }                  return now.getFullYear()+'-'+month+'-'+now.getDate()+'|'+now.getHours()+':'+now.getMinutes()+':'+now.getSeconds();              },                /* get time on site in current session */              _time_onsite : function() {                  var enter_at = this._readTracking('enter_at');                  if(enter_at == "" || enter_at == null || enter_at == undefined) { enter_at = this._get_time(); }                  var now = this._get_time();                    var exp1 = enter_at.split('|'); var exp1_1 = exp1[0].split('-'); var exp1_2 = exp1[1].split(':');                  var exp2 = now.split('|'); var exp2_1 = exp2[0].split('-'); var exp2_2 = exp2[1].split(':');                    var t1 = new Date(exp1_1[0], exp1_1[1], exp1_1[2], exp1_2[0], exp1_2[1], exp1_2[2], 0);                  var t2 = new Date(exp2_1[0], exp2_1[1], exp2_1[2], exp2_2[0], exp2_2[1], exp2_2[2], 0);                  var dif = t1.getTime() - t2.getTime();                    var seconds = Math.abs(dif / 1000);                    return seconds;              },                  /*generate random number*/              _random : function() {                  return Math.round(Math.random() * 2147483647);                  },                /*generate random number interval */              _random100 : function() {                  var rando = Math.floor(Math.random()*(10000-1+1)+1);                  rando = parseInt(rando/100);                  return rando;              },                /*prepare string to be send in GET*/              _urlencode : function(p) {                  return encodeURIComponent(p);              },                _urldecode : function(p) {                  return decodeURIComponent(p);              },                /*change in lower characters*/              _strtolower : function(p) {                  if(p == undefined) { p=''; }                  if(isNaN(p)) { return p.toLowerCase(); } else { return p; }              },                /*change in upper characters*/              _strtoupper : function(p) {                  if(p == undefined) { p=''; }                  return p.toUpperCase();              },                /* remove spaces */              _trim : function(str) {                  if(str == undefined) { str=''; }                  return str.replace(/^\s+|\s+$/g,"");               },                            /* find distance between two points */              _distance : function(lat1, lon1, lat2, lon2, unit) {                  /* unit = M,K */                  var radlat1 = Math.PI * lat1/180;                  var radlat2 = Math.PI * lat2/180;                  var radlon1 = Math.PI * lon1/180;                  var radlon2 = Math.PI * lon2/180;                  var theta = lon1-lon2;                  var radtheta = Math.PI * theta/180;                  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);                  dist = Math.acos(dist);                  dist = dist * 180/Math.PI;                  dist = dist * 60 * 1.1515;                  if (unit=="K") { dist = dist * 1.609344 }                  if (unit=="N") { dist = dist * 0.8684 }                  return dist;              },                                /* compare distances */              _geo_distance : function(coord,limit,unit) {                  unit = (unit == "km") ? 'K' : unit;                  unit = (unit == "mi") ? 'M' : unit;                  var exp = coord.split(',');                  var distance = this._distance(exp[0],exp[1],this.visitor.lat,this.visitor.long,unit);                  if(distance <= limit) {                      return true;                  }                  else {                      return false;                  }              },                /* manage session cookie */              _session_cookie : function() {                  var session = this._get_cookie(this.cookie_session);                  if(session == "" || session == null) {                      session = 'ses'+this._random()+'ion';                      var timeout = (_mktz.session_timeout != "") ? _mktz.session_timeout/3600 : '';                      this._set_cookie(this.cookie_session,session,timeout,'/','');                  }                  return session;              },                /* create tracking cookie */              _tracking_cookie : function() {                  var tracking = this._get_cookie(this.cookie_tracking);                  if(tracking == "" || tracking == null) {                      /*new visitor*/                      var referer_url = mktz_d.referrer;                      var referer_domain = (mktz_d.referrer.split('/')[2] == undefined) ? '' : mktz_d.referrer.split('/')[2];                      var referer_type = this._referer_type();                      var to_save = {                          is_returning : this._is_returning(),                          uid : this._random()+''+this._random(),                           session : this._session_cookie(),                          views : 1,                           referer_url : referer_url,                          referer_domain : referer_domain,                          referer_type : referer_type,                          visits : 1,                          landing : this.visit.page_url,                          enter_at : this._get_time(),                          first_visit : this._get_time(),                          last_visit : this._get_time(),                          last_variation : '',                          utm_source : this._get_parameter('utm_source',mktz_d.URL),                          utm_term : this._get_parameter('utm_term',mktz_d.URL),                          utm_campaign : this._get_parameter('utm_campaign',mktz_d.URL),                          utm_content : this._get_parameter('utm_content',mktz_d.URL),                          utm_medium : this._get_parameter('utm_medium',mktz_d.URL)                      };                      this._set_cookie(this.cookie_tracking,JSON.stringify(to_save),17500,'/','');                  }                  else {                      /*returning*/                      var session = this._readTracking('session');                      var views = parseInt(this._readTracking('views'))+1;                        if(session == this._session_cookie()) {                          this._updateTracking('views',views);                      }                      else {                          var referer_url = mktz_d.referrer;                          var referer_domain = (mktz_d.referrer.split('/')[2] == undefined) ? '' : mktz_d.referrer.split('/')[2];                          var referer_type = this._referer_type();                          var visits = parseInt(this._readTracking('visits'))+1;                            if(this._readTracking("first_visit") == "") {                              this._updateTracking('first_visit',this._get_time());                          }                                                    this._updateTracking('utm_source',this._get_parameter('utm_source',mktz_d.URL));                          this._updateTracking('utm_term',this._get_parameter('utm_term',mktz_d.URL));                          this._updateTracking('utm_campaign',this._get_parameter('utm_campaign',mktz_d.URL));                          this._updateTracking('utm_content',this._get_parameter('utm_content',mktz_d.URL));                          this._updateTracking('utm_medium',this._get_parameter('utm_medium',mktz_d.URL));                                                    this._updateTracking('last_visit',this._readTracking("enter_at"));                          this._updateTracking('is_returning','1');                          this._updateTracking('views',1);                          this._updateTracking('session',this._session_cookie());                          this._updateTracking('referer_url',referer_url);                          this._updateTracking('referer_domain',referer_domain);                          this._updateTracking('referer_type',referer_type);                          this._updateTracking('visits',visits);                          this._updateTracking('landing',this.visit.page_url);                          this._updateTracking('enter_at',this._get_time());                          this._updateTracking('last_variation','');                        }                    }              },                /* read tracking cookie */              _readTracking : function(key) {                  var tracking = this._get_cookie(this.cookie_tracking);                  if(tracking !== null) {                      var arr1 = JSON.parse(tracking);                      if(arr1[key] === undefined) { return''; }                      else { return arr1[key]; }                  }                  else { return''; }              },                            /* find experiment based on variation id */              _findExperimentByVariation : function(id_v) {                  var exps = _mktz.experiments;                  for(k in exps) {                      if(exps.hasOwnProperty(k)) {                          if(typeof(exps[k].variations) != "undefined" && typeof(exps[k].variations[id_v]) != "undefined") {                              return exps[k].id;                              break;                          }                      }                  }                  return false;              },                /* update tracking cookie */              _updateTracking : function(key,val) {                  var tracking = this._get_cookie(this.cookie_tracking);                  var arr2 = JSON.parse(tracking);                  var history = arr2[key];                                    if(key === "last_variation") {                      if(history === "" && val === "") {}                      else {                          var spl = history.split('|');                                                     /* check if already saw a var for the same exp */                          var c = 0;                          var c_exp = this._findExperimentByVariation(val);                          if(c_exp) {                              for(k in spl) {                                  if(spl.hasOwnProperty(k)) {                                      var v_exp = this._findExperimentByVariation(spl[k]);                                      if(c_exp == v_exp) {                                          c++;                                      }                                  }                              }                          }                                                    if(c == 0) { spl.push(val); }                          spl = this._array_unique(spl);                          val = spl.join('|');                      }                  }                                    arr2[key] = val;                  this._set_cookie(this.cookie_tracking,JSON.stringify(arr2),17500,'/','');              },                            /* array unique */              _array_unique : function(a){                  return a.reduce(function(p, c) {                      if (p.indexOf(c) < 0) p.push(c);                      return p;                  }, []);              },                /*read all cookies and return an object */              _read_cookies : function() {                  var cookies = {};                  var explode = mktz_d.cookie.split(';');                  for(key in explode) {                      if(typeof explode[key] == 'string' || explode[key] instanceof String) {                          var explode1 = explode[key].split('=');                                                    cookies[this._trim(explode1[0])] = this._trim(explode1[1]);                      }                  }                  return cookies;              },                /* find if is returning from GA cookie */              _is_returning : function() {                  var utma = this._get_cookie('__utma');                  var ga = this._get_cookie('_ga');                                    if(ga !== null) {                      /* universal GA */                      var exp = ga.split(".");                      var timestamp = exp[3];                      var now = Math.floor(new Date().getTime()/1000);                      var dif = now-timestamp;                      if(dif >-10 && dif <10) { return'0'; }                      else { return'1'; }                  }                  else if(utma !== null) {                      /* old GA */                      var exp = utma.split(".");                      var timestamp = exp[2];                      var now = Math.floor(new Date().getTime()/1000);                      var dif = now-timestamp;                      if(dif >-10 && dif <10) { return'0'; }                      else { return'1'; }                  }                  else { return'0'; }              },                _days_since : function(cookie) {                  var result = this._date_diff(this._readTracking(cookie),this._get_time());                  result = parseInt(result/86400);                  return result;              },                /*find referer type (direct, organic, paid, refferal)*/              _referer_type : function() {                  var referer_url = mktz_d.referrer;                  var referer_domain = (mktz_d.referrer.split('/')[2] == undefined) ? '' : mktz_d.referrer.split('/')[2];                  if(referer_url == "" && referer_domain == "") {                      return 'direct';                  }                  else if(referer_domain == this.base_domain) {                      return '';                  }                  else if(this._detect_paid(referer_url)) {                      return 'paid';                  }                  else if(this._detect_organic(referer_url)) {                      return 'organic';                  }                  else {                      return'refferal';                  }              },                /*detect organic traffic*/              _detect_organic : function(url) {                  var filters = 'daum:q eniro:search_word naver:query pchome:q images.google:q google:q yahoo:p yahoo:q msn:q bing:q aol:query aol:q lycos:q lycos:query ask:q cnn:query virgilio:qs baidu:wd baidu:word alice:qs yandex:text najdi:q seznam:q rakuten:qt biglobe:q goo.ne:MT search.smt.docomo:MT onet:qt onet:q kvasir:q terra:query rambler:query conduit:q babylon:q search-results:q avg:q comcast:q incredimail:q startsiden:q go.mail.ru:q centrum.cz:q 360.cn:q sogou:query tut.by:query globo:q ukr:q so.com:q haosou.com:q auone:q'.split(' ');                  for(k in filters) {                      if(filters.hasOwnProperty(k)) {                          var exp = filters[k].split(":");                          var search = url.search(exp[0]);                          if(search > 0) { return true; }                      }                  }                  return false;              },                /*detect paid traffic*/              _detect_paid : function(url) {                  var s = {                      0 : 'adurl',                      1 : 'gclid'                  };                  var keyword = false;                    for(var k in s) {                      var key = s[k];                      var param = this._get_parameter(key,url);                      if(param != "") {                          keyword = true;                      }                  }                  return keyword;              },                /*browser name*/              _browser_name : function() {                  var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];                                     if(/trident/i.test(M[1])){                      tem=/\brv[ :]+(\d+)/g.exec(ua) || [];                       return 'Explorer';                      }                     if(M[1]==='Chrome'){                      tem=ua.match(/\bOPR\/(\d+)/);                      if(tem!=null)   {return 'Opera';}                      }                     M=M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];                  if((tem=ua.match(/version\/(\d+)/i))!=null) {M.splice(1,1,tem[1]);}                                    M[0] = (M[0] == "MSIE") ? 'Explorer' : M[0];                                    return M[0];              },                /*browser version*/              _browser_version : function() {                  var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];                                                                                                                                           if(/trident/i.test(M[1])){                      tem=/\brv[ :]+(\d+)/g.exec(ua) || [];                      return tem[1];                      }                  if(M[1]==='Chrome'){                      tem=ua.match(/\bOPR\/(\d+)/);                      if(tem!=null)   {return tem[1];}                      }                     M=M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];                  if((tem=ua.match(/version\/(\d+)/i))!=null) {M.splice(1,1,tem[1]);}                  return M[1];                },                /*OS name*/              _os : function() {                  var dataOS = [                  { string: navigator.platform.toLowerCase(),     subString: "win",      identity: "Windows"},                  { string: navigator.platform.toLowerCase(),     subString: "mac",      identity: "Mac"},                  { string: navigator.userAgent.toLowerCase(),    subString: "iphone",   identity: "iOS"},                  { string: navigator.userAgent.toLowerCase(),    subString: "android",   identity: "Android"},                  { string: navigator.platform.toLowerCase(),     subString: "linux",    identity: "Linux"	}                  ];                    for(var i=0;i<dataOS.length;i++) {                      var dataString = dataOS[i].string;                      if(dataString) {                           if(dataString.indexOf(dataOS[i].subString) != -1) { return dataOS[i].identity; }                       }                  }              },                /*device type*/              _device_type : function() {                    var ua = this._strtolower(navigator.userAgent||navigator.vendor||window.opera);                  var device_type = 'desktop';                    if(ua.match(/(ipad|galaxy|xoom|touchpad|t800)/)) {                      device_type = 'tablet';                  }                  else if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(ua)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(ua.substr(0,4))) {                      device_type = 'mobile';                  }                    return device_type;              },                /*count json*/              _count_json : function(json,filter_field,filter_value) {                    filter_field = typeof filter_field !== 'undefined' ? filter_field : false;                  filter_value = typeof filter_value !== 'undefined' ? filter_value : false;                    var count = 0;                  for(var key in json) {                      if(json.hasOwnProperty(key)) {                          if(filter_field) {                              if(json[key][filter_field] == filter_value) { count++; }                          }                          else { count++; }                      }                  }                  return count;              },                /*sum json*/              _sum_json : function(json,field,filter_field,filter_value) {                    filter_field = typeof filter_field !== 'undefined' ? filter_field : false;                  filter_value = typeof filter_value !== 'undefined' ? filter_value : false;                    var sum = 0;                  var value = 0;                  for(var key in json) {                      if(json.hasOwnProperty(key)) {                          value = Number(json[key][field]);                          if(filter_field) {                              if(json[key][filter_field] == filter_value) { sum=sum+value; }                          }                          else { sum=sum+value; }                      }                  }                  return sum;              },                /*average json*/              _average_json : function(json,field,filter_field,filter_value) {                    filter_field = typeof filter_field !== 'undefined' ? filter_field : false;                  filter_value = typeof filter_value !== 'undefined' ? filter_value : false;                    var sum = 0;                  var count = 0;                  var avg = 0;                    if(filter_field) {                      sum = this._sum_json(json,field,filter_field,filter_value);                      count = this._count_json(json,filter_field,filter_value);                  }                  else {                      sum = this._sum_json(json,field);                      count = this._count_json(json);                  }                    avg = sum/count;                  return avg;              },                /*max json*/              _max_json : function(json,field,filter_field,filter_value) {                    filter_field = typeof filter_field !== 'undefined' ? filter_field : false;                  filter_value = typeof filter_value !== 'undefined' ? filter_value : false;                    var temp = [];                  for(var key in json) {                      if(json.hasOwnProperty(key)) {                          if(filter_field) {                              if(json[key][filter_field] == filter_value) { temp.push(json[key][field]); }                          }                          else { temp.push(json[key][field]); }                      }                  }                    temp.sort(function(a,b){return b-a});                  return temp[0];              },                /*preg_quote*/              _preg_quote : function(str, delimiter) {                  return (str + '').replace(new RegExp('[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\' + (delimiter || '') + '-]', 'g'), '\\$&');              },                /* first word capitalized */              _ucwords : function (str) {                  return (str + '').replace(/^([a-z\u00E0-\u00FC])|\s+([a-z\u00E0-\u00FC])/g, function ($1) {                    return $1.toUpperCase();                  });              },                /*test regex*/              _test_regex : function(rule,str) {                  var expression = new RegExp(rule,'i');                  return expression.test(str);              },                /*pageview goals*/              _pageview_goals : function() {                  var g = _mktz.pageview_goals;                  var count_goals = _mktz._count_json(g);                                    if(count_goals > 0) {                      for(key in g) {                            if(g.hasOwnProperty(key)) {                              var r = g[key];                              for(k in r) {                                    if(r.hasOwnProperty(k)) {                                      var type = r[k].type;                                      var value = _mktz._trim(r[k].value);                                        switch(type) {                                          case'is':                                          if(mktz_d.URL == value) { _mktz.push(['_Goal',key,0]); }                                          break;                                            case'start_with':                                          var expression = new RegExp('^'+_mktz._preg_quote(value),'i');                                          var check = expression.test(mktz_d.URL);                                          if(check) { _mktz.push(['_Goal',key,0]); }                                          break;                                            case'end':                                          var expression = new RegExp(_mktz._preg_quote(value)+'$','i');                                          var check = expression.test(mktz_d.URL);                                          if(check) { _mktz.push(['_Goal',key,0]); }                                          break;                                            case'contain':                                          var expression = new RegExp(_mktz._preg_quote(value),'i');                                          var check = expression.test(mktz_d.URL);                                          if(check) { _mktz.push(['_Goal',key,0]); }                                          break;                                                                                       case'page_contain':                                          var expression = new RegExp(this._preg_quote(value),'i');                                          var check = expression.test(_mktz._trim(document.body.textContent));                                          if(check) { _mktz.push(['_Goal',key,0]); }                                          break;                                      }                                  }                              }                          }                      }                  }              },                /*check device condition*/              _check_device : function(experiment) {                  try {                      if(experiment.device_type == "all") {                          return true;                      }                      else if(experiment.device_type == this.visitor.device_type) {                          return true;                      }                      else {                          return false;                      }                  }                  catch(e) { if(window.console) { console.log(e); } return false; }              },                /*check when condition*/              _check_when : function(experiment) {                  var restrict = 0;                  try {                                            var restrictions = experiment.when_restriction;                      var timezone = experiment.when_timezone;                      var d = new Date();                                            /* apply timezone if is available */                      if(timezone != "") {                           timezone = timezone.split('|');                          if(d.dst()) { timezone[0] = parseInt(timezone[0])+1; }                          d = new Date(d.getTime() + (d.getTimezoneOffset() * 60000));                          d = new Date(d.getTime() + (timezone[0] * 60000*60));                      }                         /* end apply timezone */                                            var day = d.getDay();                      var hour = d.getHours();                      var minute = d.getMinutes();                                            if(restrictions) {                          for(key in restrictions) {                              if(restrictions.hasOwnProperty(key)) {                                  switch(restrictions[key].type) {                                      case'day':                                      if(restrictions[key].value == day) { restrict++; }                                      break;                                        case'hour':                                      if(restrictions[key].value == hour) { restrict++; }                                      break;                                        case'hours_interval':                                      var explode = restrictions[key].value.split('-');                                                                            var start = parseInt(explode[0]);                                      var end = parseInt(explode[1]);                                      var day_hours = parseInt(explode[2]);                                          day_hours = (isNaN(day_hours)) ? 0 : day_hours;                                      var hour = parseInt(hour);                                                                                                                  if(day_hours == 0 || day_hours == day) {                                          if(start > end) {                                              if(hour >= start || hour <= end) { restrict++; }                                          }                                          else if(start == end) { if(hour == start) { restrict++; } }                                          else if(start < end) {                                              if(hour >= start && hour <= end) { restrict++; }                                          }                                      }                                      break;                                  }                              }                          }                      }                  }                  catch(e) { if(window.console) { console.log(e); }}                    return (restrict === 0) ? true : false;              },                            /* conditions function for evaluation */              _is : function(page,value) {                  if(page == value) { return true; } else { return false; }              },                _is_not : function(page,value) {                  if(page != value) { return true; } else { return false; }              },                _contain : function(page,value) {                  var expression = new RegExp(this._preg_quote(value),'i');                  return expression.test(page);              },                            _page_contain : function(page,value) {                  var expression = new RegExp(this._preg_quote(value),'i');                  return expression.test(_mktz._trim(document.body.textContent));              },                _not_contain : function(page,value) {                  var expression = new RegExp(this._preg_quote(value),'i');                  if(expression.test(page)) { return false; } else { return true; }              },                _regex : function(page,value) {                  var expression = new RegExp(value);                  return expression.test(page);              },                _start_with : function(page,value) {                  var expression = new RegExp('^'+this._preg_quote(value),'i');                  return expression.test(page);              },                _end_with : function(page,value) {                  var expression = new RegExp(this._preg_quote(value)+'$','i');                  return expression.test(page);              },                _next_condition : function(current,values,conditions) {                  var next_key = parseInt(current)+1;                  next = values[next_key];                  if(next) {                      if(conditions[next]) {                          if(next == "is_not" || next == "not_contain") {                              return'AND';                          }                          else { return'OR'; }                      }                      else {                          return this._next_condition(next_key,values,conditions);                      }                  }                  else { return''; }              },                /*check where condition*/              _check_where : function(experiment) {                  var ok_included = false;                  var ok_excluded = false;                  try {                      var included = experiment['where_included'];                      var excluded = experiment['where_excluded'];                      var domain = this.protocol+'//'+this.host_name;                      var page = this.visit.page_url;                      var baseURI = domain+'/';                      if(page == domain || page == domain+'/') { page = baseURI.slice(0, -1); }                        /*evaluate conditions in certain order*/                      var orders = ['is','is_not','contain','not_contain','start_with','end_with','regex','page_contain'];                      if(included) {                          var eval_str='if(';                            for(o in orders) {                              var key = orders[o];                              if(included.hasOwnProperty(key)) {                                  eval_str=eval_str+'(';                                  var cond = (key == "is_not" || key == "not_contain") ? 'AND' : 'OR';                                  for(k in included[key]) {                                      if(included[key].hasOwnProperty(k)) {                                          eval_str = eval_str+'this._'+key+'(page,"'+included[key][k]+'") '+cond+' ';                                      }                                  }                                  eval_str=eval_str+') '+this._next_condition(o,orders,included)+' ';                              }                          }                            eval_str=eval_str+') {ok_included=true;}';                            eval_str = eval_str.replace(/ AND \) OR/g,') AND');                          eval_str = eval_str.replace(/ AND \)/g,')');                          eval_str = eval_str.replace(/ OR \)/g,')');                          eval_str = eval_str.replace(/OR/g,'||');                          eval_str = eval_str.replace(/AND/g,'&&');                                                    try {                              eval(eval_str);                          } catch (e) {                              if (e instanceof SyntaxError) {                                  this._debug('[MKTZ] Check where included error: '+e.message+' => '+eval_str);                              }                          }                      }                                            if(excluded) {                          var eval_str='if(';                            for(o in orders) {                              var key = orders[o];                              if(excluded.hasOwnProperty(key)) {                                  eval_str=eval_str+'(';                                  var cond = (key == "is_not" || key == "not_contain") ? 'AND' : 'OR';                                  for(k in excluded[key]) {                                      if(excluded[key].hasOwnProperty(k)) {                                          eval_str = eval_str+'this._'+key+'(page,"'+excluded[key][k]+'") '+cond+' ';                                      }                                  }                                  eval_str=eval_str+') '+this._next_condition(o,orders,excluded)+' ';                              }                          }                            eval_str=eval_str+') {ok_excluded=true;}';                            eval_str = eval_str.replace(/ AND \) OR/g,') AND');                          eval_str = eval_str.replace(/ AND \)/g,')');                          eval_str = eval_str.replace(/ OR \)/g,')');                          eval_str = eval_str.replace(/OR/g,'||');                          eval_str = eval_str.replace(/AND/g,'&&');                                                    try {                              eval(eval_str);                          } catch (e) {                              if (e instanceof SyntaxError) {                                  this._debug('[MKTZ] Check where included error: '+e.message+' => '+eval_str);                              }                          }                      }                  }                  catch(e) { if(window.console) { console.log(e); } }                                    if(ok_included && !ok_excluded) {                      return true;                  }                  else if(ok_included && ok_excluded) {                      return false;                  }                  else if(!ok_included && ok_excluded) {                      return false;                  }                  else if(!ok_included && !ok_excluded) {                      return false;                  }                  else {                      return false;                  }              },                            _isNumeric : function(n) {                  return !isNaN(parseFloat(n)) && isFinite(n);              },                            _in : function(pieces,str) {                  var exp = pieces.split(',');                  for(k in exp) {                      if(str == this._trim(exp[k])) { return true; }                  }                  return false;              },                            /* convert to number */              _converToNumber : function(val) {                  if(val == "") {                      return '-';                  }                  else {                      if(!this._isNumeric(val)) {                          val = val.replace(/,/g,'.');                          val = val.replace(/ /g,'');                          val = val.replace(/\D+.\D+/g,'');                          val = Number(val);                      }                      return val;                  }              },                /*check segment condition*/              _check_segment : function(experiment) {                    var ok = false;                    try {                      var conditions_eval = '';                      var vars = this.visitor;                      var visit = this.visit;                        if(this._count_json(experiment.segment) > 0) {                          conditions_eval = 'if((';                          var i = 0;                          var operator = '';                          for(key in experiment.segment) {                              if(experiment.segment.hasOwnProperty(key)) {                                  i++;                                  var seg = experiment.segment[key];                                  var var_name = '';                                  var seg_value = '';                                    if(seg.parameter == "custom") {                                      var exp = seg.value.split('|');                                      var_name = 'vars.custom[\''+exp[0]+'\']';                                      seg_value = exp[1];                                  }                                  if(seg.parameter == "onpage") {                                      var exp = seg.value.split('|');                                      var_name = 'this._urldecode(mktz_$(_mktz._trim(_mktz.onpages[\''+exp[0]+'\'].selector)).text())';                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "data_layer") {                                      var exp = seg.value.split('|');                                      var_name = 'dataLayer[0][\''+exp[0]+'\']';                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "cookie") {                                      var exp = seg.value.split('|');                                      var_name = 'vars.cookies[\''+exp[0]+'\']';                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "js_variable") {                                      var exp = seg.value.split('|');                                      var_name = exp[0];                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "city_area") {                                      var exp = seg.value.split('|');                                      var_name = exp[0];                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "salesmanago") {                                      var exp = seg.value.split('|');                                      var_name = 'vars.salesmanago[\''+exp[0]+'\']';                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "conversions_count" || seg.parameter == "days_conversion" || seg.parameter == "avg_revenue" || seg.parameter == "total_revenue") {                                      var exp = seg.value.split('|');                                      var_name = 'this._conversionHistory("'+seg.parameter+'",'+exp[0]+')';                                      seg_value = exp[1];                                  }                                  else if(seg.parameter == "utm_source" || seg.parameter == "utm_medium" || seg.parameter == "utm_term" || seg.parameter == "utm_content" || seg.parameter == "utm_campaign") {                                      var_name = 'this._strtolower(visit.'+seg.parameter+')';                                      seg_value = this._strtolower(seg.value);                                  }                                  else if(seg.parameter == "survey") {                                      var exp = seg.value.split('|');                                      var_name = 'this._get_survey_question('+exp[0]+',"'+seg.type+'","'+exp[1]+'")';                                      seg_value = exp[1];                                  }                                  else {                                      var_name = 'this._strtolower(vars.'+seg.parameter+')';                                      seg_value = this._strtolower(seg.value);                                  }                                                                    operator = (seg.operator == "AND") ? '&&' : '||';                                  operator = (operator == "&&") ? ') && (' : ' || ';                                  operator = (i == 1) ? '' : operator;                                    if(seg.parameter == "page_viewed") {                                      switch(seg.functione) {                                          case'include':                                          conditions_eval=conditions_eval+''+operator+' this._session_history(\''+seg.type+'\',\''+seg_value+'\')';                                              break;                                          case'exclude':                                          conditions_eval=conditions_eval+''+operator+' !this._session_history(\''+seg.type+'\',\''+seg_value+'\')';                                           break;                                      }                                  }                                  else {                                      switch(seg.type) {                                          case'is':                                          if(seg.parameter == "view_variation") {                                              switch(seg.functione) {                                                  case'include':                                                  conditions_eval=conditions_eval+''+operator+' this._variation_history('+seg_value+')';                                                      break;                                                  case'exclude':                                                  conditions_eval=conditions_eval+''+operator+' !this._variation_history('+seg_value+')';                                                   break;                                              }                                          }                                          else {                                              switch(seg.functione) {                                                  case'include':                                                  if(seg.parameter == "ip") {                                                  conditions_eval=conditions_eval+''+operator+'this._in(\''+seg_value+'\','+var_name+')';                                                      }                                                  else {                                                  conditions_eval=conditions_eval+''+operator+''+var_name+' == \''+seg_value+'\'';                                                      }                                                  break;                                                  case'exclude':                                                  if(seg.parameter == "ip") {                                                      conditions_eval=conditions_eval+''+operator+'!this._in(\''+seg_value+'\','+var_name+')';                                                      }                                                  else {                                                      conditions_eval=conditions_eval+''+operator+''+var_name+' != \''+seg_value+'\'';                                                      }                                                  break;                                              }                                          }                                          break;                                            case'lower':                                          var_name = 'this._converToNumber('+var_name+')';                                          seg_value = Number(seg_value);                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+''+var_name+' < '+seg_value+'';                                                  break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+''+var_name+' >= '+seg_value+'';                                                  break;                                          }                                          break;                                            case'greater':                                          var_name = 'this._converToNumber('+var_name+')';                                          seg_value = Number(seg_value);                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+''+var_name+' > '+seg_value+'';                                                  break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+''+var_name+' <= '+seg_value+'';                                                  break;                                          }                                              break;                                            case'start_with':                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+' this._test_regex(\'^\'+this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+' !this._test_regex(\'^\'+this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                          }                                               break;                                            case'end_with':                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+' this._test_regex(this._preg_quote(\''+seg_value+'\')+\'$\','+var_name+')';                                                 break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+' !this._test_regex(this._preg_quote(\''+seg_value+'\')+\'$\'),'+var_name+')';                                                 break;                                          }                                           break;                                            case'contain':                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+' this._test_regex(this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+' !this._test_regex(this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                          }                                           break;                                              case'regex':                                          switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+' this._test_regex(this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+' !this._test_regex(this._preg_quote(\''+seg_value+'\'),'+var_name+')';                                                 break;                                          }                                           break;                                      }                                                                            if(seg.parameter == "city_area") {                                         switch(seg.functione) {                                              case'include':                                              conditions_eval=conditions_eval+''+operator+' this._geo_distance(\''+var_name+'\','+seg_value+',\''+seg.type+'\')';                                              break;                                              case'exclude':                                              conditions_eval=conditions_eval+''+operator+' !this._geo_distance(\''+var_name+'\','+seg_value+',\''+seg.type+'\')';                                              break;                                          }                                       }                                                                        }                              }                          }                          conditions_eval=conditions_eval+')) { ok=true; } else { ok=false; }';                                                    console.log(conditions_eval);                                                    try {                              eval(conditions_eval);                          } catch (e) {                              if (e instanceof SyntaxError) {                                  this._debug('[MKTZ] Segment error: '+e.message+' => '+conditions_eval);                              }                          }                                                    return ok;                      }                      else {                          return ok;                      }                  }                  catch(e) { if(window.console) { console.log(e); } return ok; }              },                /*check frequency condition*/              _check_frequency : function(experiment) {                  try {                      if(this.visitor.history.fail == "true") {                           this._debug('[MKTZ] Visitor history error to read');                          return false;                       }                      var frequency_value = (experiment.frequency.value == 0) ? 99999 : parseInt(experiment.frequency.value);                      var history = this._get_history_experiment(experiment.id,experiment.frequency.type);                      if(history >= frequency_value) {                          return false;                      }                      else {                          return true;                      }                  }                  catch(e) { if(window.console) { console.log(e); } return false; }              },                /*check survey restrictions*/              _check_survey_restriction : function(experiment) {                  try {                      if(experiment.type != "survey") {                          return true;                      }                      else {                          var surveys = this._get_cookie(this.cookie_survey);                          if(surveys == "" || surveys == null) {                              return true;                          }                          else {                              var arr3 = JSON.parse(surveys);                              var survey = arr3[experiment.id];                              if(survey == undefined || survey == "") {                                  return true;                              }                              else {                                  switch(survey.status) {                                      case'stop':                                      return false;                                      break;                                        case'later':                                      var dif = this._date_diff(survey.last_action,this._get_time());                                      if(dif > 3600) {                                          return true;                                      }                                         else {                                          return false;                                      }                                      break;                                        case'completed':                                      return false;                                      break;                                  }                              }                          }                      }                  }                  catch(e) { if(window.console) { console.log(e); } return false; }              },                /* date difference in seconds */              _date_diff : function(str1,str2) {                  if(str1 === undefined || str2 === undefined || str1 == '' || str2 == '') { return '0'; }                  else {                      var exp1 = str1.split('|'); var exp1_1 = exp1[0].split('-'); var exp1_2 = exp1[1].split(':');                      var exp2 = str2.split('|'); var exp2_1 = exp2[0].split('-'); var exp2_2 = exp2[1].split(':');                      var t1 = new Date(exp1_1[0], exp1_1[1], exp1_1[2], exp1_2[0], exp1_2[1], exp1_2[2], 0);                      var t2 = new Date(exp2_1[0], exp2_1[1], exp2_1[2], exp2_2[0], exp2_2[1], exp2_2[2], 0);                      var dif = t1.getTime() - t2.getTime();                      var seconds = Math.abs(dif / 1000);                      return seconds;                  }              },                /* add 1 to month */              _repairMonth : function(m) {                  return parseInt(m)+1;              },                            /* get survey history from json */              _get_survey_question : function(id_question,condition,answer) {                  if(this.visitor.surveys.fail == "true") { return false; }                  else if(this.visitor.surveys.empty == "true") { return false; }                  var ok = false;                  for(key in this.visitor.surveys) {                      if(this.visitor.surveys.hasOwnProperty(key)) {                          for(key2 in this.visitor.surveys[key]) {                              if(this.visitor.surveys[key].hasOwnProperty(key2)) {                                  if(this.visitor.surveys[key][key2].id_question == id_question) {                                                                        if(condition == "is") {                                          if(this.visitor.surveys[key][key2].answer == answer) {                                              return this.visitor.surveys[key][key2].answer;                                          }                                      }                                      else {                                          return this.visitor.surveys[key][key2].answer;                                      }                                                                        }                              }                          }                      }                  }                  return ok;              },                /*get experiment history from json*/              _get_history_experiment : function(id_experiment,type) {                    var t = new Date();                  var w = new Date(t.getTime()-1000*60*60*24*7);                  var m = new Date(t.getTime()-1000*60*60*24*30);                  var today = t.getFullYear()+'/'+this._repairMonth(t.getMonth())+'/'+t.getDate();                  var week_ago = w.getFullYear()+'/'+this._repairMonth(w.getMonth())+'/'+w.getDate();                  var month_ago = m.getFullYear()+'/'+this._repairMonth(m.getMonth())+'/'+m.getDate();                    var count = 0;                  switch(type) {                      case'day':                      var start = today;                      var end = today;                      for(key in this.visitor.history) {                          if(this.visitor.history.hasOwnProperty(key)) {                              if(key != "first") {                                  if(this._inRange(this.visitor.history[key].date,start,end) && this.visitor.history[key].id_experiment == id_experiment) { count++; }                              }                          }                      }                      break;                        case'week':                      var start = week_ago;                      var end = today;                      for(key in this.visitor.history) {                          if(this.visitor.history.hasOwnProperty(key)) {                              if(key != "first") {                                  if(this._inRange(this.visitor.history[key].date,start,end) && this.visitor.history[key].id_experiment == id_experiment) { count++; }                              }                          }                      }                      break;                        case'month':                      var start = month_ago;                      var end = today;                      for(key in this.visitor.history) {                          if(this.visitor.history.hasOwnProperty(key)) {                              if(key != "first") {                                  if(this._inRange(this.visitor.history[key].date,start,end) && this.visitor.history[key].id_experiment == id_experiment) { count++; }                              }                          }                      }                        break;                        case'all':                      for(key in this.visitor.history) {                          if(this.visitor.history.hasOwnProperty(key)) {                              if(key != "first") {                                  if(this.visitor.history[key].id_experiment == id_experiment) { count++; }                              }                          }                      }                      break;                  }                    /* if API return error, use cookie */                  if(count === 0) {                      var cookie_temp = this._get_cookie('mktz_temp_'+id_experiment);                      if(cookie_temp == "1") {                          count=1;                      }                  }                    return count;              },                /*find pageview in session history*/              _session_history : function(condition,value) {                  var ok = false;                  for(key in this.visitor.page_viewed) {                      if(this.visitor.page_viewed.hasOwnProperty(key)) {                          var url = this.visitor.page_viewed[key];                          url = this._urldecode(url);                          switch(condition) {                              case'start_with':                              if(this._test_regex('^'+this._preg_quote(value),url)) { ok =true; }                              break;                                case'end_with':                              if(this._test_regex(this._preg_quote(value)+'$',url)) { ok =true; }                              break;                                case'is':                              if(url == value) { ok = true; }                              break;                                case'contain':                              if(this._test_regex(this._preg_quote(value),url)) { ok =true; }                              break;                                case'regex':                              if(this._test_regex(this._preg_quote(value),url)) { ok =true; }                              break;                          }                      }                  }                  return ok;              },                /*find variation in history*/              _variation_history : function(id_variation) {                  if(this.visitor.history.fail == "true") { return false; }                  var ok = false;                  for(key in this.visitor.history) {                      if(this.visitor.history.hasOwnProperty(key)) {                          if(this.visitor.history[key].id_variation == id_variation) { ok=true; }                      }                  }                  return ok;              },                /*detect allocation*/              _check_trafic_allocation_experiment : function(experiment) {                  try {                      var trafic = experiment.trafic_allocation;                       var random = this._random100();                      this._debug('[MKTZ] Random generated for #'+experiment.id+' : '+random+' ('+trafic+'% allocated)');                      if(random <= trafic) { return true; } else { return false; }                  }                  catch(e) { if(window.console) { console.log(e); } return false; }              },                /* check if user is tagged in a active exclusive experiment */              _checkExclusiveExperiment : function(id,type) {                  var ret = false;                  try {                      var history = this.visitor.history;                      for(id_h in history) {                          if(history.hasOwnProperty(id_h)) {                              var exclusive_until = history[id_h].exclusive_until;                              var id_experiment = history[id_h].id_experiment;                              if(this.experiments[id_experiment] != undefined && this.experiments[id_experiment].type == type) {                                  if(exclusive_until != undefined) {                                      var t = new Date();                                      var today = t.getFullYear()+'/'+this._repairMonth(t.getMonth())+'/'+t.getDate();                                        if(this._compare_dates(exclusive_until,today) == 1 && id_experiment != id) {                                          if(this.experiments[id_experiment] != undefined) {                                              if(this._check_when(this.experiments[id_experiment])) {                                                  ret = true;                                              }                                              else {                                                  ret = false;                                              }                                              break;                                          }                                      }                                  }                              }                          }                      }                  } catch(e) { if(window.console) { console.log(e); } }                  return ret;              },                /* search in ab cookie if exists id */              _check_tagged : function(id) {                  var tagged = this._get_cookie(this.cookie_ab);                  var arr4 = JSON.parse(tagged);                  if(arr4[id]) { return arr4[id]; } else { return false; }              },                /* update cookie ab with new experiment */              _update_cookie_ab : function(id_experiment,id_variation) {                  var tagged = this._get_cookie(this.cookie_ab);                  var arr5 = {};                  if(tagged == "" || tagged == null) {} else { arr5 = JSON.parse(tagged); }                  arr5[id_experiment] = id_variation;                  this._set_cookie(this.cookie_ab,JSON.stringify(arr5),17500,'/','');              },                /* delete from cookie ab the deleted experiments */              _clear_cookie_ab : function() {                  var tagged = this._get_cookie(this.cookie_ab);                  if(tagged == "" || tagged == null) {}                  else {                      var arr6 = JSON.parse(tagged);                      var exp = this.experiments;                      for(id in arr6) { if(!exp[id]) { delete arr6[id]; } }                      this._set_cookie(this.cookie_ab,JSON.stringify(arr6),17500,'/','');                  }              },                /* find conversion history */              _conversionHistory : function(type,id_goal) {                  var ret = '';                  var history = this.visitor.conversions;                  if(this._count_json(history) > 0) {                      switch(type) {                          case'conversions_count':                          if(id_goal == 0) {                              ret = this._count_json(history);                          }                          else {                              ret = this._count_json(history,'id',id_goal);                          }                          break;                            case'days_conversion':                          if(id_goal == 0) {                              ret = this._max_json(history,'date');                          }                          else {                              ret = this._max_json(history,'date','id',id_goal);                          }                            var t1 = new Date(ret);                          var t2 = new Date();                          var dif = t1.getTime() - t2.getTime();                          ret = Math.abs((dif/1000));                          ret = parseInt(ret/86400);                          break;                            case'avg_revenue':                          if(id_goal == 0) {                              ret = this._average_json(history,'value');                          }                          else {                              ret = this._average_json(history,'value','id',id_goal);                          }                          break;                            case'total_revenue':                          if(id_goal == 0) {                              ret = this._sum_json(history,'value');                          }                          else {                              ret = this._sum_json(history,'value','id',id_goal);                          }                          break;                      }                  }                  return ''+ret+'';              },                /* detect tagged ab experiments (saved in cookie) */              _detect_tagged_ab : function() {                  var tagged = this._get_cookie(this.cookie_ab);                  if(tagged == "" || tagged == null || this.loading_slow === true) {                      return false;                  }                  else {                      /*update ab cookie with active experiments*/                      this._clear_cookie_ab();                        var exp = this.experiments;                      for(id_exp in exp) {                          if(exp.hasOwnProperty(id_exp)) {                              if(exp[id_exp].type == "ab") {                                  var id_variation = this._check_tagged(id_exp);                                  if(id_variation) {                                      if(this._check_when(exp[id_exp])) {                                          if(this._check_where(exp[id_exp])) {                                              if(this._check_segment(exp[id_exp])) {                                                  if(this._insert_variation_ab(exp[id_exp],id_variation)) {                                                      this._debug('[MKTZ] Experiment tagged #'+id_exp+' - applyed');                                                      this.tagged_experiment = true;                                                      return true;                                                  }                                              }                                              else {                                                  this._debug('[MKTZ] Experiment tagged #'+id_exp+' - not correct segment');                                              }                                          }                                          else {                                              this._debug('[MKTZ] Experiment tagged #'+id_exp+' - not correct where');                                          }                                      }                                      else {                                          this._debug('[MKTZ] Experiment tagged #'+id_exp+' - not correct when');                                      }                                  }                              }                          }                      }                  }                  return false;              },                /* randomize array */              _randomizeArr : function(array) {                  for (var i = array.length - 1; i > 0; i--) {                      var j = Math.floor(Math.random() * (i + 1));                      var temp = array[i];                      array[i] = array[j];                      array[j] = temp;                  }                  return array;              },                /* get experiment keys - for randomize */              _experimentKeys : function(obj) {                    var keys = [];                  var toReturn = {};                  for(k in obj) {                      if(obj.hasOwnProperty(k)) {                          keys.push(k);                      }                  }                    if(this.allocation_type = "random") {                      keys = this._randomizeArr(keys);                  }                    return keys;              },                /*detect what ab experiments should run*/              _detect_ab : function() {                  if(this.loading_slow === false && this.tagged_experiment === false) {                      var experiments = this.experiments;                      var exp_keys = this._experimentKeys(experiments);                      var id_exp = '';                        for(i in exp_keys) {                          id_exp = exp_keys[i];                          if(experiments.hasOwnProperty(id_exp)) {                              if(experiments[id_exp].type == "ab") {                                  if(this._checkExclusiveExperiment(id_exp,"ab")) {                                      this._debug('[MKTZ] Visitor already tagged in a exclusive experiment in use (AB).');                                      _mktz._flicker("remove");                                      return false;                                  }                                  else {                                      if(experiments[id_exp].visitors_limit > 0 && (experiments[id_exp].visitors_now >= experiments[id_exp].visitors_limit)) {                                          this._debug('[MKTZ] Experiment AB #'+id_exp+' - visitor limit exceded');                                      }                                      else {                                          if(this._check_trafic_allocation_experiment(experiments[id_exp])) {                                              if(this._check_device(experiments[id_exp])) {                                                  if(this._check_when(experiments[id_exp])) {                                                      if(this._check_where(experiments[id_exp])) {                                                          if(this._check_segment(experiments[id_exp])) {                                                              if(this._check_frequency(experiments[id_exp])) {                                                                  this._debug('[MKTZ] Experiment AB found: #'+id_exp);                                                                  this._insert_variation_ab(experiments[id_exp]);                                                                  return false;                                                              }                                                              else {                                                                  this._debug('[MKTZ] Experiment AB #'+id_exp+' - not correct frequency');                                                              }                                                          }                                                          else {                                                              this._debug('[MKTZ] Experiment AB #'+id_exp+' - not correct segment');                                                          }                                                      }                                                      else {                                                          this._debug('[MKTZ] Experiment AB #'+id_exp+' - not correct where');                                                      }                                                  }                                                  else {                                                      this._debug('[MKTZ] Experiment AB #'+id_exp+' - not correct when');                                                  }                                              }                                              else {                                                  this._debug('[MKTZ] Experiment AB #'+id_exp+' - not correct device type');                                              }                                          }                                          else {                                              this._debug('[MKTZ] Experiment AB #'+id_exp+' - trafic unallocate');                                          }                                      }                                  }                                }                          }                      }                        /*no experiments - force stop */                      _mktz._flicker("remove");                      this._debug('[MKTZ] No AB experiments applyed');                      return false;                  }              },                            /* detect interactions experiments */              _detect_interactions : function() {                  if(this.loading_slow === false) {                      var experiments = this.experiments;                      var exp_keys = this._experimentKeys(experiments);                      var id_exp = '';                        for(i in exp_keys) {                          id_exp = exp_keys[i];                          if(experiments.hasOwnProperty(id_exp)) {                              if(experiments[id_exp].type == "interactions") {                                  if(this._checkExclusiveExperiment(id_exp,"interactions")) {                                      this._debug('[MKTZ] Visitor already tagged in a exclusive experiment in use. (personalization)');                                      return false;                                  }                                  else {                                      if(experiments[id_exp].visitors_limit > 0 && (experiments[id_exp].visitors_now >= experiments[id_exp].visitors_limit)) {                                          this._debug('[MKTZ] Experiment personalization #'+id_exp+' - visitor limit exceded');                                      }                                      else {                                          if(this._check_trafic_allocation_experiment(experiments[id_exp])) {                                              if(this._check_device(experiments[id_exp])) {                                                  if(this._check_when(experiments[id_exp])) {                                                      if(this._check_where(experiments[id_exp])) {                                                          if(this._check_segment(experiments[id_exp])) {                                                              if(this._check_frequency(experiments[id_exp])) {                                                                    this._debug('[MKTZ] Experiment personalization found: #'+id_exp);                                                                  this._insert_variation_interactions(experiments[id_exp]);                                                                    return false;                                                              }                                                              else {                                                                  this._debug('[MKTZ] Experiment personalization #'+id_exp+' - not correct frequency');                                                              }                                                          }                                                          else {                                                              this._debug('[MKTZ] Experiment personalization #'+id_exp+' - not correct segment');                                                          }                                                      }                                                      else {                                                          this._debug('[MKTZ] Experiment personalization #'+id_exp+' - not correct where');                                                      }                                                  }                                                  else {                                                      this._debug('[MKTZ] Experiment personalization #'+id_exp+' - not correct when');                                                  }                                              }                                              else {                                                  this._debug('[MKTZ] Experiment personalization #'+id_exp+' - not correct device type');                                              }                                          }                                          else {                                              this._debug('[MKTZ] Experiment personalization #'+id_exp+' - trafic unallocate');                                          }                                      }                                  }                                }                          }                      }                                            this._debug('[MKTZ] No personalization experiments applyed');                      return false;                                        }              },                /*detect what survey should run*/              _detect_surveys : function() {                  if(this.loading_slow === false) {                      var surveys = this.experiments;                      var exp_keys = this._experimentKeys(surveys);                      var id_s = '';                        for(i in exp_keys) {                          id_s = exp_keys[i];                          if(surveys.hasOwnProperty(id_s)) {                              if(surveys[id_s].type == "survey") {                                  if(surveys[id_s].survey.responses_limit > 0 && (surveys[id_s].survey.responses_now >= surveys[id_s].survey.responses_limit)) {                                      this._debug('[MKTZ] Survey #'+id_s+' - responses limit exceded');                                  }                                  else {                                      if(this._check_trafic_allocation_experiment(surveys[id_s])) {                                          if(this._check_device(surveys[id_s])) {                                              if(this._check_when(surveys[id_s])) {                                                  if(this._check_where(surveys[id_s])) {                                                      if(this._check_segment(surveys[id_s])) {                                                          if(this._check_frequency(surveys[id_s])) {                                                              if(this._check_survey_restriction(surveys[id_s])) {                                                                  this._debug('[MKTZ] Survey found: #'+id_s);                                                                  this._insert_survey(surveys[id_s]);                                                                  return false;                                                              }                                                              else {                                                                  this._debug('[MKTZ] Survey #'+id_s+' not passed survey restrictions (responded, later or stopped)');                                                              }                                                           }                                                          else {                                                              this._debug('[MKTZ] Survey #'+id_s+' - not correct frequency');                                                          }                                                      }                                                      else {                                                          this._debug('[MKTZ] Survey #'+id_s+' - not correct segment');                                                      }                                                  }                                                  else {                                                      this._debug('[MKTZ] Survey #'+id_s+' - not correct where');                                                  }                                              }                                              else {                                                  this._debug('[MKTZ] Survey #'+id_s+' - not correct when');                                              }                                          }                                          else {                                              this._debug('[MKTZ] Survey #'+id_s+' - not correct device');                                          }                                      }                                      else {                                          this._debug('[MKTZ] Survey #'+id_s+' - trafic unallocate');                                      }                                  }                              }                          }                      }                                            /*no surveys - force stop */                      this._debug('[MKTZ] No surveys detected');                      return false;                                        }              },                /* click triggers display interactions */              _click_triggers : function() {                  try {                      var id_experiment = this.running_test.id_experiment;                      var id_variation = this.running_test.id_variation;                                            if(id_experiment > 0 && id_variation > 0) {                          var clickTriggers = this.experiments[id_experiment].variations[id_variation].triggers;                          var clickTriggers = JSON.parse(clickTriggers);                          for(i in clickTriggers) {                              if(clickTriggers[i] !== null) {                                  mktz_$(document).on('click',clickTriggers[i].selector,clickTriggers[i].variation,function(e) {                                      e.preventDefault();                                      _mktz.push(["applyExperiment",e.data]);                                  });                              }                          }                      }                  }                  catch(e) {}              },                /* replace variables */              _replaceVariables : function(str) {                  if(str !== null) {                      var vars = this._findVariables(str);                      if(vars.length > 0) {                          for(i in vars) {                              if(vars.hasOwnProperty(i)) {                                  /* replace CUSTOM */                                  if(vars[i].search("{CUSTOM") > -1) {                                      if(typeof vars[i] == "string") {                                          var exp = vars[i].split('[');                                          if(exp[1]) {                                              var exp1 = exp[1].split(']');                                              var exp2 = exp1[0].split('|');                                              var var_name = exp2[0].replace('-','\-');                                              var def = exp2[1];                                              var var_value = '';                                                                                            if(var_name != "") {                                                  var_value = this.visitor.custom[this._strtolower(var_name)];                                                  if(var_value == "" || typeof(var_value) == "undefined") {                                                      if(def) {                                                          var_value = this._urldecode(def);                                                       }                                                      else { var_value=''; }                                                  }                                              }                                                                                          if(def) { var_name = var_name+'\\|'+def; }                                              str = str.replace(new RegExp("{CUSTOM\\["+var_name+"\\]}","g"),_mktz._trim(var_value));                                          }                                      }                                  }                                  /* replace COOKIE */                                  if(vars[i].search("{COOKIE") > -1) {                                      if(typeof vars[i] == "string") {                                          var exp = vars[i].split('[');                                          if(exp[1]) {                                              var exp1 = exp[1].split(']');                                              var exp2 = exp1[0].split('|');                                              var var_name = exp2[0].replace('-','\-');                                              var def = exp2[1];                                              var var_value = '';                                                                                            if(var_name != "") {                                                  var_value = unescape(this.visitor.cookies[var_name]);                                                  if(var_value == "" || var_value == "undefined") {                                                      if(def) {                                                          var_value = this._urldecode(def);                                                       }                                                      else { var_value=''; }                                                  }                                              }                                                                                            if(def) { var_name = var_name+'\\|'+def; }                                              str = str.replace(new RegExp("{COOKIE\\["+var_name+"\\]}","g"),_mktz._trim(var_value));                                          }                                      }                                  }                                  /* replace SALESMANAGO */                                  if(vars[i].search("{SALESMANAGO") > -1) {                                      if(typeof vars[i] == "string") {                                          var exp = vars[i].split('[');                                          if(exp[1]) {                                              var exp1 = exp[1].split(']');                                              var var_name = exp1[0];                                              var exp2 = var_name.split('.');                                              var source = this.visitor.salesmanago;                                              if(exp2.length == 1) {                                                  source = source[var_name];                                              }                                              else {                                                  var temp = 'source = this.visitor.salesmanago';                                                  for(p in exp2) { temp = temp+'[\''+exp2[p]+'\']'; }                                                  eval(temp);                                              }                                              str = str.replace(new RegExp("{SALESMANAGO\\["+var_name+"\\]}","g"),source);                                          }                                      }                                  }                                  /* replace DATALAYER */                                  else if(vars[i].search("{DATALAYER") > -1) {                                      if(typeof(dataLayer) != "undefined") {                                          if(typeof vars[i] == "string") {                                              var exp = vars[i].split('[');                                              if(exp[1]) {                                                  var exp1 = exp[1].split(']');                                                  var exp2 = exp1[0].split('|');                                                  var var_name = exp2[0].replace('-','\-');                                                  var def = exp2[1];                                                  var var_value = '';                                                                                                    if(var_name != "") {                                                      var_value = dataLayer[0][var_name];                                                      if(var_value == "" || typeof(var_value) == "undefined") {                                                          if(def) {                                                              var_value = this._urldecode(def);                                                           }                                                          else { var_value = ''; }                                                      }                                                  }                                                                                                  if(def) { var_name = var_name+'\\|'+def; }                                                  str = str.replace(new RegExp("{DATALAYER\\["+var_name+"\\]}","g"),var_value);                                              }                                          }                                      }                                  }                                  /* replace ONPAGE */                                  else if(vars[i].search("{ONPAGE") > -1) {                                      if(typeof vars[i] == "string") {                                          var exp = vars[i].split('[');                                          if(exp[1]) {                                              var exp1 = exp[1].split(']');                                              var exp2 = exp1[0].split('|');                                              var var_name = exp2[0].replace('-','\-');                                              var def = exp2[1];                                              var var_value = '';                                                                                            if(var_name != "") {                                                  if(typeof(_mktz.onpages[var_name]) != "undefined") {                                                      var_value = mktz_$(_mktz.onpages[var_name].selector).text();                                                      if(var_value != "") {                                                          var_value = this._urldecode(var_value);                                                      }                                                      else if(def) {                                                          var_value = this._urldecode(def);                                                       }                                                  }                                                  else if(def) {                                                      var_value = this._urldecode(def);                                                   }                                              }                                                if(def) { var_name = var_name+'\\|'+def; }                                              str = str.replace(new RegExp("{ONPAGE\\["+var_name+"\\]}","g"),_mktz._trim(var_value));                                          }                                      }                                    }                                  /* replace INURL */                                  else if(vars[i].search("{INURL") > -1) {                                      if(typeof vars[i] == "string") {                                          var exp = vars[i].split('[');                                          if(exp[1]) {                                              var exp1 = exp[1].split(']');                                              var exp2 = exp1[0].split('|');                                              var var_name = exp2[0];                                              var def = exp2[1];                                              var var_value = '';                                                if(var_name != "") {                                                  var_value = this._get_parameter(var_name,mktz_d.URL);                                                  if(var_value) {                                                      var_value = this._urldecode(var_value);                                                  }                                                  else if(def) {                                                       var_value = this._urldecode(def);                                                   }                                                  else {                                                      var_value = '';                                                  }                                              }                                                if(def) { var_name = var_name+'\\|'+def; }                                                str = str.replace(new RegExp("{INURL\\["+var_name+"\\]}","g"),_mktz._trim(var_value));                                          }                                      }                                  }                              }                          }                            str = str.replace(/{REFERRER_DOMAIN}/g,this.visitor.referer_domain);                          str = str.replace(/{TEMPERATURE_C}/g,this.visitor.weather_temperature_c);                          str = str.replace(/{TEMPERATURE_F}/g,this.visitor.weather_temperature_f);                          str = str.replace(/{COUNTRY}/g,this._ucwords(this.visitor.country));                          str = str.replace(/{REGION}/g,this._ucwords(this.visitor.region));                          str = str.replace(/{CITY}/g,this._ucwords(this.visitor.city));                          str = str.replace(/{BROWSER_NAME}/g,this._ucwords(this.visitor.browser_name));                          str = str.replace(/{BROWSER_VERSION}/g,this.visitor.browser_version);                          str = str.replace(/{VIEWS_SESSION}/g,this.visitor.views_session);                          str = str.replace(/{DAYS_SINCE_FIRST_VISIT}/g,this.visitor.days_first_visit);                          str = str.replace(/{DAYS_SINCE_PREVIOUS_VISIT}/g,this.visitor.days_previous_visit);                          str = str.replace(/{ISP}/g,this._ucwords(this.visitor.isp));                          str = str.replace(/{DEVICE_TYPE}/g,this.visitor.device_type);                          str = str.replace(/{IP}/g,this.visitor.ip);                          str = str.replace(/{OS}/g,this._ucwords(this.visitor.os));                          str = str.replace(/{ONLINE}/g,this.visitor.online);                        }                    }                  return str;              },                /* find variables as {TEST} */              _findVariables : function(str) {                  var r=/\{(.*?)\}/g, a=[], m;                  while (m = r.exec(str)) {                       a.push('{'+m[1]+'}');                   }                  return a;              },                /* insert survey in page */              _insert_survey : function(experiment) {                  try {                      /* replace variables in intro/end/questions/answers */                      experiment.survey.intro = this._replaceVariables(experiment.survey.intro);                      experiment.survey.end = this._replaceVariables(experiment.survey.end);                      experiment.survey.header = this._replaceVariables(experiment.survey.header);                        for(id in experiment.survey.questions) {                          if(experiment.survey.questions.hasOwnProperty(id)) {                              experiment.survey.questions[id].question = this._replaceVariables(experiment.survey.questions[id].question);                              experiment.survey.questions[id].help = this._replaceVariables(experiment.survey.questions[id].help);                          }                      }                        _survey.event = (_mktz.embed_survey) ? 'embed' : experiment.trigger;                      _survey.survey = experiment.survey;                      _survey.init();                  }                  catch(e) { if(window.console) { console.log(e); }}              },                /*insert variation AB in page*/              _insert_variation_ab : function(experiment,id_variation) {                    /*appy global css*/                  if(experiment.global_css != "") {                      mktz_$('html > head').append('<style>'+experiment.global_css+'</style>');                  }                    /*apply global js*/                  if(experiment.global_javascript != "") {                      mktz_$('html > head').append('<script>'+experiment.global_javascript+'</script>');                  }                    try {                      id_variation = typeof id_variation !== 'undefined' ? id_variation : 0;                        if(id_variation > 0) {                          if(experiment.variations[id_variation]) {                              this.inject = new _mktzInteract();                              this.inject.clicks = experiment.clicks;                              this.inject.type = experiment.variations[id_variation].type;                              this.inject.event = 'load';                              this.inject.content = this._replaceVariables(experiment.variations[id_variation].code);                              this.inject.pre_init('ab');                              this._updateTracking('last_variation',id_variation);                                /*log for API*/                              this.running_test.id_experiment = experiment.id;                              this.running_test.id_variation = id_variation;                              return true;                          }                          else { return false; }                      }                      else {                          var random = this._random100();                          var prev = 0;                          for(id_v in experiment.variations) {                              if(experiment.variations.hasOwnProperty(id_v)) {                                  prev = prev+experiment.variations[id_v].trafic_allocation;                                  if(random <= prev) {                                      this._debug('[MKTZ] Variation allocated: #'+id_v+' [random: '+random+']');                                        var key2 = id_v;                                        this.inject = new _mktzInteract();                                      this.inject.clicks = experiment.clicks;                                      this.inject.type = experiment.variations[key2].type;                                      this.inject.event = 'load';                                      this.inject.content = this._replaceVariables(experiment.variations[key2].code);                                      this.inject.pre_init('ab');                                        this._Variation(experiment.trigger,experiment.variations[key2].type,key2);                                      this._Integrations(experiment,experiment.variations[key2],false);                                        /*update cookie ab*/                                      this._update_cookie_ab(experiment.id,key2);                                      return false;                                  }                              }                          }                      }                    }                  catch(e) {                       _mktz._flicker("remove");                      if(window.console) { console.log(e); }                  }                  return false;              },                            /* search personalization exp history - get variation */              _find_history_personalization_variation : function(id_experiment) {                  try {                      if(this.visitor.history.fail == "true") {                           this._debug('[MKTZ] Visitor history error to retrieve');                          return false;                       }                      else {                          for(key in this.visitor.history) {                              if(this.visitor.history.hasOwnProperty(key)) {                                  if(this.visitor.history[key].id_experiment == id_experiment) {                                      return this.visitor.history[key].id_variation;                                      break;                                  }                              }                          }                          return false;                      }                                        }                  catch(e) { if(window.console) { console.log(e); } return false; }              },                /*insert variation interaction in page*/              _insert_variation_interactions : function(experiment,id_variation) {                                try {                      id_variation = typeof id_variation !== 'undefined' ? id_variation : 0;                        var random = this._random100();                      var prev = 0;                      var variations = experiment.variations;                        if(id_variation > 0) {                          /*manually triggered*/                          prev = 101;                          delete variations;                          variations = {};                          variations[id_variation] = experiment.variations[id_variation];                          experiment.trigger = 'load';                      }                      else {                          /*check in history for id_experiment and get id_variation */                          var check_seen = this._find_history_personalization_variation(experiment.id);                                                    if(check_seen && typeof(experiment.variations[check_seen]) != "undefined") {                              delete variations;                              prev = 101;                              variations = {};                              variations[check_seen] = experiment.variations[check_seen];                          }                      }                        for(id_v in variations) {                          if(variations.hasOwnProperty(id_v)) {                              if(variations[id_v].trafic_allocation == 0) {                                  delete variations[id_v];                              }                          }                      }                                            if(this._count_json(variations) === 0) {                          _mktz._flicker("remove");                          this._debug('[MKTZ] No variations allocated for #'+experiment.id);                      }                      else {                                                for(id_v in variations) {                              if(variations.hasOwnProperty(id_v)) {                                  prev = prev+variations[id_v].trafic_allocation;                                           if(random <= prev) {                                      this._debug('[MKTZ] Variation allocated: #'+id_v+' [random: '+random+']');                                        /*control*/                                      if(variations[id_v].code == null) {                                          variations[id_v].code = {};                                          variations[id_v].code.type = 'landing';                                          variations[id_v].code.code = "if(window.console) { console.log('Control personalization'); }";                                      }                                        /*create UI*/                                      this.inject = new _mktzInteract();                                      this.inject.event = experiment.trigger;                                      this.inject.type = variations[id_v].code.type;                                      this.inject.show_after = parseInt(variations[id_v].code.show_after);                                      this.inject.show_close = variations[id_v].code.show_close;                                      this.inject.show_close = (this.inject.show_close == "false") ? false : true;                                      this.inject.autoclose_in = parseInt(variations[id_v].code.autoclose_in);                                      this.inject.content = this._replaceVariables(variations[id_v].code.code);                                      this.inject.shadow_color = variations[id_v].code.shadow_color;                                      this.inject.shadow_opacity = variations[id_v].code.shadow_opacity;                                      if(variations[id_v].code.container_css) {                                          for(attr in variations[id_v].code.container_css) {                                              if(variations[id_v].code.container_css.hasOwnProperty(attr)) {                                                  this.inject.container_css[attr] = variations[id_v].code.container_css[attr];                                              }                                          }                                      }                                                                            this._debug('[MKTZ] Variation #'+id_v+' will be triggered on '+experiment.trigger);                                      this.inject.lateVariation = {};                                      this.inject.lateVariation.experiment = experiment;                                      this.inject.lateVariation.variation = variations[id_v];                                      this.inject.lateVariation.variation_key = id_v;                                      this._preload_images(experiment.variations[id_v].code.code);                                        this.inject.pre_init('interactions');                                      return false;                                  }                              }                          }                      }                  }                  catch(e) {                       _mktz._flicker("remove");                      if(window.console) { console.log(e); }                  }                  return false;              },                /* send experiment data to 3rd party */              _Integrations : function(experiment,variation,late) {                                /* temporary cookie for one time frequency */                  if((experiment.type == "interactions" || experiment.type == "survey") && experiment.frequency.value == "1") {                      _mktz._set_cookie('mktz_temp_'+experiment.id,1,1/8,'/','');                  }                                if(experiment.type != "survey") {                        /* track engagement */                      if(experiment.track_engagement == 1) {                          _mktz._detectEngagement();                      }                        /* log for API */                      this.running_test.id_experiment = experiment.id;                      this.running_test.id_variation = variation.id;                        /* google analytics */                      if(this.analytics_integration == "1") {                          this._send_to_analytics(experiment.name,variation.name);                          this._debug('[MKTZ] 3rd party - send to google analytics (as event)');                      }                  }              },                /* send data to analytics */              _send_to_analytics : function(exp_name,var_name) {                  var try_sending = setInterval(                      function(){                          if(typeof(dataLayer) !== "undefined") {                              dataLayer.push({                                  'event': 'marketizator',                                  'mktzExperiment': exp_name,                                  'mktzVariation': var_name                              });                              clearInterval(try_sending);                          }                          else if(typeof(ga) !== "undefined") {                              if(typeof ga.getAll == "function") {                                  var allTrackers = ga.getAll();                                  for (var i = 0; i < allTrackers.length; i++) {                                      tracker=allTrackers[i].get('name')+'.send';                                      ga(tracker, 'event', 'Marketizator', exp_name, var_name, {'nonInteraction': 1});                                  }                                  clearInterval(try_sending);                              }                          }                          else if(typeof(_gaq) !== "undefined") {                              _gaq.push(['_trackEvent', 'Marketizator', exp_name, var_name, 0, true]);                              clearInterval(try_sending);                          }                      }                  ,100);                    setTimeout(function() { clearInterval(try_sending); }, 3000);              },                /*request to send data to server*/              _send_data : function(parameters) {                  if(!this._is_live_preview()) {                      /* post segmentation support */                      var visitor_type = (_mktz.visitor.is_returning == "0") ? "new" : "returning";                      parameters = parameters+'&browser='+_mktz.visitor.browser_name+' '+_mktz.visitor.browser_version+'&resolution='+_mktz.visitor.resolution+'&device_type='+_mktz.visitor.device_type+'&referer_type='+_mktz.visitor.referer_type+'&visitor_type='+visitor_type+'&country='+_mktz.visitor.country+'&region='+_mktz.visitor.region+'&city='+_mktz.visitor.city+'&os='+_mktz.visitor.os;                      /* end post segmentation support */                        mktz_$.support.cors = true;                      mktz_$.ajax({                          url: encodeURI(mktz_d.location.protocol+''+this.base_domain+'/mktzsave?' + parameters),                          error : function() {                              _mktz._flicker("remove");                              _mktz._debug('[MKTZ] Log tracking error ('+parameters+')');                          }                      });                  }              },                /* insert slow log */              _slow_log : function(timeout,msg,req) {                  _mktz._debug('[MKTZ] Log a slow log to database (no experiments triggered)');                  _mktz._send_data('event=slow_log&id_website='+this.id_website+'&page_url='+this._urlencode(this.visit.page_url)+'&async=1&timeout='+timeout+'&msg='+msg+'&browser='+this.visitor.browser_name+' '+this.visitor.browser_version+'&request='+this._urlencode(req));              },                _View : function() {                  /*send view in database*/                  this._debug('[MKTZ] Log a pageview');                  var parameters = 'event=view&uid='+this.visitor.uid+'&session='+this.visitor.session_id+'&id_website='+this.id_website+'&page_url='+this._urlencode(this.visit.page_url)+'&time='+this.time;                  this._send_data(parameters);              },                _Variation : function(trigger,type,id) {                  /*associate visit with variation*/                  if(!this.no_experiments) {                                        if(trigger == "exit" && type == "control") {                          /* dont put last_variation in cookie */                      }                      else {                          this._updateTracking('last_variation',id);                      }                                            this._debug('[MKTZ] Log viewed variation #'+id);                      var parameters = 'event=variation&uid='+this.visitor.uid+'&session='+this.visitor.session_id+'&id_website='+this.id_website+'&id_variation='+id+'&time='+this.time;                      this._send_data(parameters);                  }              },                _Var : function(name,value) {                  if(!this._is_editor()) {                                        if(this._is_iframe()) { _mktz = parent._mktz; }                                        /*associate user with some attributes*/                      this._debug('[MKTZ] Save custom paramater: ['+name+' - '+value+']');                      var parameters = 'event=var&uid='+_mktz.visitor.uid+'&id_website='+_mktz.id_website+'&custom_name='+name+'&custom_value='+value;                      this._send_data(parameters);                        /* set variable for live usage */                      _mktz.visitor.custom[name] = value;                  }              },                _Goal : function(name,value,custom) {                  if(!this._is_editor()) {                                        if(this._is_iframe()) { _mktz = parent._mktz; }                        /*set a goal for this user*/                      var uid = _mktz.visitor.uid;                      var session = _mktz.visitor.session_id;                      var last_variation = this._readTracking('last_variation');                      var extra_params='';                        custom = typeof custom !== 'undefined' ? custom : '';                        if(custom != "" && custom != "undefined") {                          if(typeof custom.uid !== "undefined") {                              uid = custom.uid;                          }                            if(typeof custom.session !== "undefined") {                              session = custom.session;                          }                            if(typeof custom.last_variation !== "undefined") {                              last_variation = custom.last_variation;                          }                            if(typeof custom.transaction !== "undefined") {                              extra_params=extra_params+'&transaction='+custom.transaction;                          }                      }                        this._debug('[MKTZ] Save goal: ['+name+' - '+value+']');                      var parameters = 'event=goal&uid='+uid+'&session='+session+'&id_website='+_mktz.id_website+'&goal_name='+name+'&goal_value='+value+'&last_variation='+last_variation+'&time='+_mktz.time+''+extra_params;                      this._send_data(parameters);                  }              },                applyExperiment : function(idu) {                  if(idu !== null && idu != "") {                      var exp = idu.split('-');                      var id_experiment = exp[0];                      if(this.experiments[id_experiment]) {                          var id_variation = (exp[1] !== null) ? exp[1] : 0;                           switch(this.experiments[id_experiment].type) {                              case'survey':                              this._insert_survey(this.experiments[id_experiment]);                              break;                                case'ab':                              this._insert_variation_ab(this.experiments[id_experiment],id_variation);                              break;                                case'interactions':                              this._insert_variation_interactions(this.experiments[id_experiment],id_variation);                              break;                          }                          return true;                          this._debug('[MKTZ-API] Apply experiment '+id_experiment+'/'+id_variation);                      }                      else {                          return false;                      }                  }                  else {                      return false;                  }              },                getLogs : function() {                  for(i in this.loggs) {                      if(this.loggs.hasOwnProperty(i)) {                          if(window.console) { console.log(this.loggs[i]); }                      }                  }              },                optout : function(status) {                  if(status == "true") {                      this._set_cookie(this.cookie_optout,1,(24*35)*2,'/','');                      this._debug('[MKTZ-API] Save optout command');                  }                  else {                      this._set_cookie(this.cookie_optout,0,-100,'/','');                      this._debug('[MKTZ-API] Delete optout command');                  }                  return true;              },                getVisitor : function() {                  var temp = mktz_$.extend(this.visitor,this.visit);                  delete temp.cookies;                  delete temp.history;                  delete temp.conversions;                  delete temp.page_viewed;                  return temp;              },                getExperiment : function() {                  if(_mktz.running_test['id_experiment'] === 0) {                      return false;                  }                  else {                      return _mktz.running_test;                  }              },                _compare_dates:function(a,b) {                  var date1 = new Date(a);                  var date2 = new Date(b);                  if(date1 > date2) { return'1'; }                  else if(date1 == date2) { return'0'; }                  else if(date1 > date2) { return'-1'; }              },                _inRange:function(d,start,end) {                  var tested_date = new Date(d);                  var start_date = new Date(start);                  var end_date = new Date(end);                    if(tested_date >= start_date && tested_date <= end_date) {                      return true;                  }                  else { return false; }              },                _detectEngagement : function() {                  if(_mktz.visitor.views_session >= 3 && _mktz.visitor.time_onsite >= 180) {                      _mktz._Goal('engagement',0);                  }              }          };            try { _mktz.init(); } catch(e) { if(window.console) { console.log('MKTZ error: '+e); }}                    Date.prototype.stdTimezoneOffset = function() {              var jan = new Date(this.getFullYear(), 0, 1);              var jul = new Date(this.getFullYear(), 6, 1);              return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());          };            Date.prototype.dst = function() {              return this.getTimezoneOffset() < this.stdTimezoneOffset();          };                }      })(window);  }    